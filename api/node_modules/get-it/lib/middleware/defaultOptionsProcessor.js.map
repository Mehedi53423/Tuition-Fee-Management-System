{"version":3,"sources":["../../src/middleware/defaultOptionsProcessor.js"],"names":["objectAssign","require","urlParse","isReactNative","navigator","product","has","Object","prototype","hasOwnProperty","defaultOptions","timeout","module","exports","opts","options","url","normalizeTimeout","query","removeUndefined","method","body","toUpperCase","toString","stringifyQueryString","obj","pairs","key","call","push","length","join","val","Array","isArray","forEach","item","map","encodeURIComponent","time","connect","socket","delay","Number","isNaN","target","undefined"],"mappings":"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","sourcesContent":["const objectAssign = require('object-assign')\nconst urlParse = require('url-parse')\n\nconst isReactNative = typeof navigator === 'undefined' ? false : navigator.product === 'ReactNative'\n\nconst has = Object.prototype.hasOwnProperty\nconst defaultOptions = {timeout: isReactNative ? 60000 : 120000}\n\nmodule.exports = opts => {\n  const options =\n    typeof opts === 'string'\n      ? objectAssign({url: opts}, defaultOptions)\n      : objectAssign({}, defaultOptions, opts)\n\n  // Parse URL into parts\n  const url = urlParse(\n    options.url,\n    {}, // Don't use current browser location\n    true // Parse query strings\n  )\n\n  // Normalize timeouts\n  options.timeout = normalizeTimeout(options.timeout)\n\n  // Shallow-merge (override) existing query params\n  if (options.query) {\n    url.query = objectAssign({}, url.query, removeUndefined(options.query))\n  }\n\n  // Implicit POST if we have not specified a method but have a body\n  options.method =\n    options.body && !options.method ? 'POST' : (options.method || 'GET').toUpperCase()\n\n  // Stringify URL\n  options.url = url.toString(stringifyQueryString)\n\n  return options\n}\n\nfunction stringifyQueryString(obj) {\n  const pairs = []\n  for (const key in obj) {\n    if (has.call(obj, key)) {\n      push(key, obj[key])\n    }\n  }\n\n  return pairs.length ? pairs.join('&') : ''\n\n  function push(key, val) {\n    if (Array.isArray(val)) {\n      val.forEach(item => push(key, item))\n    } else {\n      pairs.push([key, val].map(encodeURIComponent).join('='))\n    }\n  }\n}\n\nfunction normalizeTimeout(time) {\n  if (time === false || time === 0) {\n    return false\n  }\n\n  if (time.connect || time.socket) {\n    return time\n  }\n\n  const delay = Number(time)\n  if (isNaN(delay)) {\n    return normalizeTimeout(defaultOptions.timeout)\n  }\n\n  return {connect: delay, socket: delay}\n}\n\nfunction removeUndefined(obj) {\n  const target = {}\n  for (const key in obj) {\n    if (obj[key] !== undefined) {\n      target[key] = obj[key]\n    }\n  }\n  return target\n}\n"],"file":"defaultOptionsProcessor.js"}