{"version":3,"sources":["../../src/middleware/jsonRequest.js"],"names":["objectAssign","require","isPlainObject","serializeTypes","isBuffer","obj","constructor","module","exports","processOptions","options","body","isStream","pipe","shouldSerialize","indexOf","Array","isArray","JSON","stringify","headers"],"mappings":";;;;AAAA,IAAMA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA5B;;AACA,IAAMC,aAAa,GAAGD,OAAO,CAAC,iBAAD,CAA7B;;AAEA,IAAME,cAAc,GAAG,CAAC,SAAD,EAAY,QAAZ,EAAsB,QAAtB,CAAvB;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,GAAG;AAAA,SAClB,CAAC,CAACA,GAAG,CAACC,WAAN,IACA,OAAOD,GAAG,CAACC,WAAJ,CAAgBF,QAAvB,KAAoC,UADpC,IAEAC,GAAG,CAACC,WAAJ,CAAgBF,QAAhB,CAAyBC,GAAzB,CAHkB;AAAA,CAApB;;AAKAE,MAAM,CAACC,OAAP,GAAiB;AAAA,SAAO;AACtBC,IAAAA,cAAc,EAAE,wBAAAC,OAAO,EAAI;AACzB,UAAMC,IAAI,GAAGD,OAAO,CAACC,IAArB;;AACA,UAAI,CAACA,IAAL,EAAW;AACT,eAAOD,OAAP;AACD;;AAED,UAAME,QAAQ,GAAG,OAAOD,IAAI,CAACE,IAAZ,KAAqB,UAAtC;AACA,UAAMC,eAAe,GACnB,CAACF,QAAD,IACA,CAACR,QAAQ,CAACO,IAAD,CADT,KAECR,cAAc,CAACY,OAAf,SAA8BJ,IAA9B,OAAwC,CAAC,CAAzC,IAA8CK,KAAK,CAACC,OAAN,CAAcN,IAAd,CAA9C,IAAqET,aAAa,CAACS,IAAD,CAFnF,CADF;;AAKA,UAAI,CAACG,eAAL,EAAsB;AACpB,eAAOJ,OAAP;AACD;;AAED,aAAOV,YAAY,CAAC,EAAD,EAAKU,OAAL,EAAc;AAC/BC,QAAAA,IAAI,EAAEO,IAAI,CAACC,SAAL,CAAeT,OAAO,CAACC,IAAvB,CADyB;AAE/BS,QAAAA,OAAO,EAAEpB,YAAY,CAAC,EAAD,EAAKU,OAAO,CAACU,OAAb,EAAsB;AACzC,0BAAgB;AADyB,SAAtB;AAFU,OAAd,CAAnB;AAMD;AAvBqB,GAAP;AAAA,CAAjB","sourcesContent":["const objectAssign = require('object-assign')\nconst isPlainObject = require('is-plain-object')\n\nconst serializeTypes = ['boolean', 'string', 'number']\nconst isBuffer = obj =>\n  !!obj.constructor &&\n  typeof obj.constructor.isBuffer === 'function' &&\n  obj.constructor.isBuffer(obj)\n\nmodule.exports = () => ({\n  processOptions: options => {\n    const body = options.body\n    if (!body) {\n      return options\n    }\n\n    const isStream = typeof body.pipe === 'function'\n    const shouldSerialize =\n      !isStream &&\n      !isBuffer(body) &&\n      (serializeTypes.indexOf(typeof body) !== -1 || Array.isArray(body) || isPlainObject(body))\n\n    if (!shouldSerialize) {\n      return options\n    }\n\n    return objectAssign({}, options, {\n      body: JSON.stringify(options.body),\n      headers: objectAssign({}, options.headers, {\n        'Content-Type': 'application/json'\n      })\n    })\n  }\n})\n"],"file":"jsonRequest.js"}