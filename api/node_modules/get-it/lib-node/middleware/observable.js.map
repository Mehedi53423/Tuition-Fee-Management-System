{"version":3,"sources":["../../src/middleware/observable.js"],"names":["global","require","objectAssign","module","exports","opts","Observable","implementation","Error","onReturn","channels","context","observer","error","subscribe","err","progress","event","next","type","response","complete","request","publish","abort"],"mappings":";;AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,gBAAD,CAAtB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,eAAD,CAA5B;;AAEAE,MAAM,CAACC,OAAP,GAAiB,CAACC,IAAI,GAAG,EAAR,KAAe;AAC9B,QAAMC,UAAU,GAAGD,IAAI,CAACE,cAAL,IAAuBP,MAAM,CAACM,UAAjD;;AACA,MAAI,CAACA,UAAL,EAAiB;AACf,UAAM,IAAIE,KAAJ,CACJ,iFADI,CAAN;AAGD;;AAED,SAAO;AACLC,IAAAA,QAAQ,EAAE,CAACC,QAAD,EAAWC,OAAX,KACR,IAAIL,UAAJ,CAAeM,QAAQ,IAAI;AACzBF,MAAAA,QAAQ,CAACG,KAAT,CAAeC,SAAf,CAAyBC,GAAG,IAAIH,QAAQ,CAACC,KAAT,CAAeE,GAAf,CAAhC;AACAL,MAAAA,QAAQ,CAACM,QAAT,CAAkBF,SAAlB,CAA4BG,KAAK,IAAIL,QAAQ,CAACM,IAAT,CAAchB,YAAY,CAAC;AAACiB,QAAAA,IAAI,EAAE;AAAP,OAAD,EAAqBF,KAArB,CAA1B,CAArC;AACAP,MAAAA,QAAQ,CAACU,QAAT,CAAkBN,SAAlB,CAA4BM,QAAQ,IAAI;AACtCR,QAAAA,QAAQ,CAACM,IAAT,CAAchB,YAAY,CAAC;AAACiB,UAAAA,IAAI,EAAE;AAAP,SAAD,EAAqBC,QAArB,CAA1B;AACAR,QAAAA,QAAQ,CAACS,QAAT;AACD,OAHD;AAKAX,MAAAA,QAAQ,CAACY,OAAT,CAAiBC,OAAjB,CAAyBZ,OAAzB;AACA,aAAO,MAAMD,QAAQ,CAACc,KAAT,CAAeD,OAAf,EAAb;AACD,KAVD;AAFG,GAAP;AAcD,CAtBD","sourcesContent":["const global = require('../util/global')\nconst objectAssign = require('object-assign')\n\nmodule.exports = (opts = {}) => {\n  const Observable = opts.implementation || global.Observable\n  if (!Observable) {\n    throw new Error(\n      '`Observable` is not available in global scope, and no implementation was passed'\n    )\n  }\n\n  return {\n    onReturn: (channels, context) =>\n      new Observable(observer => {\n        channels.error.subscribe(err => observer.error(err))\n        channels.progress.subscribe(event => observer.next(objectAssign({type: 'progress'}, event)))\n        channels.response.subscribe(response => {\n          observer.next(objectAssign({type: 'response'}, response))\n          observer.complete()\n        })\n\n        channels.request.publish(context)\n        return () => channels.abort.publish()\n      })\n  }\n}\n"],"file":"observable.js"}