"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DefaultLayout = void 0;

var _react = _interopRequireWildcard(require("react"));

var _router = require("@sanity/base/router");

var _absolutes = _interopRequireDefault(require("all:part:@sanity/base/absolutes"));

var _user = _interopRequireDefault(require("part:@sanity/base/user"));

var _components = require("@sanity/base/components");

var _hooks = require("@sanity/base/hooks");

var _internal = require("@sanity/base/_internal");

var _Sidecar = _interopRequireDefault(require("../addons/Sidecar"));

var _RenderTool = require("../main/RenderTool");

var _createDocumentDialog = require("../createDocumentDialog");

var _SchemaErrorReporter = require("../schemaErrors/SchemaErrorReporter");

var _sideMenu = require("../sideMenu");

var _navbar = require("../navbar");

var _useDefaultLayoutRouter = require("../useDefaultLayoutRouter");

var _styles = require("./styles");

var _LoadingScreen = require("./LoadingScreen");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var newDocumentOptions = (0, _internal.getNewDocumentOptions)();
var DefaultLayout = /*#__PURE__*/(0, _react.memo)(function DefaultLayout() {
  var router = (0, _useDefaultLayoutRouter.useDefaultLayoutRouter)();

  var _useState = (0, _react.useState)(false),
      _useState2 = _slicedToArray(_useState, 2),
      createMenuIsOpen = _useState2[0],
      setCreateMenuIsOpen = _useState2[1];

  var _useState3 = (0, _react.useState)(false),
      _useState4 = _slicedToArray(_useState3, 2),
      menuIsOpen = _useState4[0],
      setMenuIsOpen = _useState4[1];

  var _useState5 = (0, _react.useState)(true),
      _useState6 = _slicedToArray(_useState5, 2),
      showLoadingScreen = _useState6[0],
      setShowLoadingScreen = _useState6[1];

  var _useState7 = (0, _react.useState)(false),
      _useState8 = _slicedToArray(_useState7, 2),
      loaded = _useState8[0],
      setLoaded = _useState8[1];

  var _useState9 = (0, _react.useState)(false),
      _useState10 = _slicedToArray(_useState9, 2),
      searchIsOpen = _useState10[0],
      setSearchIsOpen = _useState10[1];

  var _useState11 = (0, _react.useState)(null),
      _useState12 = _slicedToArray(_useState11, 2),
      loadingScreenElement = _useState12[0],
      setLoadingScreenElement = _useState12[1];

  var _useState13 = (0, _react.useState)(null),
      _useState14 = _slicedToArray(_useState13, 2),
      portalElement = _useState14[0],
      setPortalElement = _useState14[1];

  var _useCurrentUser = (0, _hooks.useCurrentUser)(),
      currentUser = _useCurrentUser.value;

  var _useTemplatePermissio = (0, _hooks.unstable_useTemplatePermissions)(newDocumentOptions),
      _useTemplatePermissio2 = _slicedToArray(_useTemplatePermissio, 2),
      templatePermissions = _useTemplatePermissio2[0],
      isTemplatePermissionsLoading = _useTemplatePermissio2[1];

  (0, _react.useEffect)(() => {
    if (!loaded) {
      setLoaded(true);
    }
  }, [loaded]);
  var handleAnimationEnd = (0, _react.useCallback)(() => {
    setShowLoadingScreen(false);
  }, []);
  (0, _react.useEffect)(() => {
    if (loadingScreenElement) {
      loadingScreenElement.addEventListener('animationend', handleAnimationEnd, false);
    }

    return () => {
      if (loadingScreenElement) {
        loadingScreenElement.removeEventListener('animationend', handleAnimationEnd, false);
      }
    };
  }, [handleAnimationEnd, loadingScreenElement]);
  var handleCreateButtonClick = (0, _react.useCallback)(() => {
    setCreateMenuIsOpen(prev => !prev);
  }, []);
  var handleActionModalClose = (0, _react.useCallback)(() => {
    setCreateMenuIsOpen(false);
  }, []);
  var handleToggleMenu = (0, _react.useCallback)(() => {
    setMenuIsOpen(prev => !prev);
  }, []);
  var handleSwitchTool = (0, _react.useCallback)(() => {
    setMenuIsOpen(false);
  }, []);
  var handleLogout = (0, _react.useCallback)(() => {
    _user.default.actions.logout();
  }, []);
  var handleSearchOpen = (0, _react.useCallback)(open => {
    setSearchIsOpen(open);
  }, []);

  var renderContent = () => {
    var tool = router.state.tool || '';
    return /*#__PURE__*/_react.default.createElement(_styles.RootFlex, {
      $isOverlayVisible: menuIsOpen,
      "data-testid": "default-layout",
      direction: "column"
    }, showLoadingScreen && /*#__PURE__*/_react.default.createElement(_LoadingScreen.LoadingScreen, {
      loaded: loaded || document.visibilityState == 'hidden',
      ref: setLoadingScreenElement
    }), /*#__PURE__*/_react.default.createElement(_components.LegacyLayerProvider, {
      zOffset: "navbar"
    }, /*#__PURE__*/_react.default.createElement(_navbar.Navbar, {
      templatePermissions: templatePermissions,
      isTemplatePermissionsLoading: isTemplatePermissionsLoading,
      createMenuIsOpen: createMenuIsOpen,
      onCreateButtonClick: handleCreateButtonClick,
      onToggleMenu: handleToggleMenu,
      onUserLogout: handleLogout,
      onSearchOpen: handleSearchOpen,
      searchPortalElement: portalElement
    })), currentUser && /*#__PURE__*/_react.default.createElement(_sideMenu.SideMenu, {
      activeToolName: tool,
      isOpen: menuIsOpen,
      onClose: handleToggleMenu,
      onSignOut: handleLogout,
      onSwitchTool: handleSwitchTool,
      user: currentUser
    }), /*#__PURE__*/_react.default.createElement(_styles.MainAreaFlex, {
      direction: ['column', 'row'],
      flex: 1,
      overflow: menuIsOpen ? 'hidden' : undefined
    }, /*#__PURE__*/_react.default.createElement(_styles.ToolBox, {
      "data-testid": "default-layout__tool-box",
      direction: "column",
      flex: 1,
      hidden: searchIsOpen,
      height: "fill"
    }, /*#__PURE__*/_react.default.createElement(_router.RouteScope, {
      scope: tool
    }, /*#__PURE__*/_react.default.createElement(_RenderTool.RenderTool, {
      tool: tool
    }))), /*#__PURE__*/_react.default.createElement(_styles.SidecarBox, {
      hidden: searchIsOpen
    }, /*#__PURE__*/_react.default.createElement(_Sidecar.default, null)), searchIsOpen && /*#__PURE__*/_react.default.createElement(_styles.PortalDiv, {
      ref: setPortalElement
    })), createMenuIsOpen && /*#__PURE__*/_react.default.createElement(_components.LegacyLayerProvider, {
      zOffset: "navbar"
    }, /*#__PURE__*/_react.default.createElement(_createDocumentDialog.CreateDocumentDialog, {
      templatePermissions: templatePermissions,
      isTemplatePermissionsLoading: isTemplatePermissionsLoading,
      onClose: handleActionModalClose
    })), _absolutes.default.map((Abs, i) => /*#__PURE__*/_react.default.createElement(Abs, {
      key: String(i)
    })));
  };

  return /*#__PURE__*/_react.default.createElement(_SchemaErrorReporter.SchemaErrorReporter, null, renderContent);
});
exports.DefaultLayout = DefaultLayout;