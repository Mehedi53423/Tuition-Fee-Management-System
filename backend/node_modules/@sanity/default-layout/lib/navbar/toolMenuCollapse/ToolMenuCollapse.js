"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ToolMenuCollapse = ToolMenuCollapse;

var _icons = require("@sanity/icons");

var _router = require("@sanity/base/router");

var _react = _interopRequireWildcard(require("react"));

var _components = require("@sanity/base/components");

var _useDefaultLayoutRouter = require("../../useDefaultLayoutRouter");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var BUTTON_TOOLTIP_PROPS = {
  scheme: 'light'
};
var MENU_BUTTON_PROPS = {
  popover: {
    constrainSize: true,
    portal: true,
    scheme: 'light'
  }
};

function ToolMenuCollapse(_ref) {
  var tools = _ref.tools;
  var router = (0, _useDefaultLayoutRouter.useDefaultLayoutRouter)();

  var _useState = (0, _react.useState)(null),
      _useState2 = _slicedToArray(_useState, 2),
      rootElement = _useState2[0],
      setRootElement = _useState2[1];

  (0, _components.useRovingFocus)({
    rootElement: rootElement
  });
  return (0, _react.useMemo)(() => /*#__PURE__*/_react.default.createElement(_components.CollapseMenu, {
    menuButtonProps: MENU_BUTTON_PROPS,
    gap: 1,
    ref: setRootElement
  }, tools.map(tool => {
    var title = tool.title || tool.name;
    var Link = /*#__PURE__*/(0, _react.forwardRef)(function Link(props, ref) {
      return /*#__PURE__*/_react.default.createElement(_router.StateLink, _extends({}, props, {
        ref: ref,
        state: _objectSpread(_objectSpread({}, router.state), {}, {
          tool: tool.name,
          [tool.name]: undefined
        })
      }));
    });
    return /*#__PURE__*/_react.default.createElement(_components.CollapseMenuButton // eslint-disable-next-line react/jsx-no-bind
    , {
      as: Link,
      key: tool.name,
      "data-as": "a",
      mode: "bleed",
      tooltipProps: BUTTON_TOOLTIP_PROPS,
      collapsedProps: {
        tooltipText: title
      },
      text: title,
      icon: tool.icon || _icons.PlugIcon,
      selected: router.state.tool === tool.name
    });
  })), [router.state, tools]);
}