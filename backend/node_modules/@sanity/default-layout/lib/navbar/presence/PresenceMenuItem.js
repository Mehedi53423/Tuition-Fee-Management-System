"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PresenceMenuItem = PresenceMenuItem;

var _orderBy2 = _interopRequireDefault(require("lodash/orderBy"));

var _react = _interopRequireWildcard(require("react"));

var PathUtils = _interopRequireWildcard(require("@sanity/util/paths"));

var _ui = require("@sanity/ui");

var _components = require("@sanity/base/components");

var _icons = require("@sanity/icons");

var _router = require("@sanity/base/router");

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _templateObject;

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var AvatarCard = (0, _styledComponents.default)(_ui.Card)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  background: transparent;\n  margin: calc((-35px + 11px) / 2);\n"])));

function PresenceMenuItem(_ref) {
  var presence = _ref.presence;
  var lastActiveLocation = (0, _orderBy2.default)(presence.locations || [], ['lastActiveAt'], ['desc']).find(location => location.documentId);
  var hasLink = Boolean(lastActiveLocation === null || lastActiveLocation === void 0 ? void 0 : lastActiveLocation.documentId);
  var LinkComponent = (0, _react.useMemo)(() =>
  /*#__PURE__*/
  // eslint-disable-next-line @typescript-eslint/no-shadow
  (0, _react.forwardRef)(function LinkComponent(linkProps, ref) {
    return /*#__PURE__*/_react.default.createElement(_router.IntentLink, _extends({}, linkProps, {
      intent: "edit",
      params: {
        id: lastActiveLocation === null || lastActiveLocation === void 0 ? void 0 : lastActiveLocation.documentId,
        path: encodeURIComponent(PathUtils.toString(lastActiveLocation === null || lastActiveLocation === void 0 ? void 0 : lastActiveLocation.path))
      },
      ref: ref
    }));
  }), [lastActiveLocation]);
  return /*#__PURE__*/_react.default.createElement(_ui.MenuItem, {
    as: lastActiveLocation ? LinkComponent : 'div',
    "data-as": lastActiveLocation ? 'a' : 'div',
    padding: 4,
    paddingRight: 3
  }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    align: "center"
  }, /*#__PURE__*/_react.default.createElement(AvatarCard, {
    scheme: "light"
  }, /*#__PURE__*/_react.default.createElement(_components.UserAvatar, {
    size: 1,
    key: presence.user.id,
    user: presence.user
  })), /*#__PURE__*/_react.default.createElement(_ui.Box, {
    flex: 1,
    marginLeft: 4
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    textOverflow: "ellipsis"
  }, presence.user.displayName)), hasLink && /*#__PURE__*/_react.default.createElement(_ui.Box, {
    marginLeft: 3
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, null, /*#__PURE__*/_react.default.createElement(_icons.LinkIcon, null)))));
}