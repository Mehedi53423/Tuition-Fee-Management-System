"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChangelogList = ChangelogList;

var _ui = require("@sanity/ui");

var _react = _interopRequireDefault(require("react"));

var _ChangelogItem = require("./ChangelogItem");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ChangelogList(props) {
  var changeItems = props.changeItems,
      isLatest = props.isLatest,
      version = props.version;
  var features = changeItems.filter(c => c.changeType === 'feature');
  var bugfixes = changeItems.filter(c => c.changeType === 'bugfix');
  var bugFixesDescription = bugfixes.map(_ref => {
    var description = _ref.description;
    return description;
  }).flat();
  return /*#__PURE__*/_react.default.createElement(_ui.Stack, {
    space: 4
  }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    align: "center",
    gap: 2
  }, /*#__PURE__*/_react.default.createElement(_ui.Heading, {
    size: 1
  }, "v", version), isLatest && /*#__PURE__*/_react.default.createElement(_ui.Badge, {
    tone: "positive"
  }, "Latest")), /*#__PURE__*/_react.default.createElement(_ui.Stack, {
    space: 3
  }, features === null || features === void 0 ? void 0 : features.map(change => /*#__PURE__*/_react.default.createElement(_ChangelogItem.ChangelogItem, {
    key: change.title,
    changeType: change.changeType,
    description: change === null || change === void 0 ? void 0 : change.description,
    title: change.title
  })), bugFixesDescription.length > 0 && /*#__PURE__*/_react.default.createElement(_ChangelogItem.ChangelogItem, {
    changeType: "bugfix",
    description: bugFixesDescription
  })), /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    justify: "flex-end"
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    size: 1
  }, /*#__PURE__*/_react.default.createElement("a", {
    href: "https://github.com/sanity-io/sanity/releases",
    rel: "noreferrer noopener",
    target: "_blank"
  }, "See full changelog on GitHub"))));
}