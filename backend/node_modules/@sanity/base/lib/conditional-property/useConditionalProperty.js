"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.unstable_useConditionalProperty = void 0;

var _hooks = require("../_exports/hooks");

var _utils = require("./utils");

var _excluded = ["checkProperty"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

// eslint-disable-next-line camelcase
var unstable_useConditionalProperty = _ref => {
  var checkProperty = _ref.checkProperty,
      props = _objectWithoutProperties(_ref, _excluded);

  if (typeof checkProperty === 'function') {
    return resolveProperty(_objectSpread({
      checkProperty
    }, props));
  }

  return checkProperty;
};

exports.unstable_useConditionalProperty = unstable_useConditionalProperty;

function resolveProperty(_ref2) {
  var checkProperty = _ref2.checkProperty,
      checkPropertyKey = _ref2.checkPropertyKey,
      document = _ref2.document,
      parent = _ref2.parent,
      value = _ref2.value;

  var _useCurrentUser = (0, _hooks.useCurrentUser)(),
      currentUser = _useCurrentUser.value;

  var isPropertyTruthy = (0, _utils.useCheckCondition)(checkProperty, checkPropertyKey, {
    currentUser: (0, _utils.omitDeprecatedRole)(currentUser),
    document,
    parent,
    value
  });
  return isPropertyTruthy;
}