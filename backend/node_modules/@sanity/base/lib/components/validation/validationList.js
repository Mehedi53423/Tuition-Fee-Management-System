"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ValidationList = ValidationList;

var _react = _interopRequireWildcard(require("react"));

var _types = require("@sanity/types");

var _ui = require("@sanity/ui");

var _listItem = require("./listItem");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ValidationList(props) {
  var documentType = props.documentType,
      kind = props.kind,
      markers = props.markers,
      onFocus = props.onFocus,
      onClose = props.onClose,
      truncate = props.truncate;
  var errors = markers.filter(_types.isValidationErrorMarker);
  var warnings = markers.filter(_types.isValidationWarningMarker);
  var info = markers.filter(_types.isValidationInfoMarker);
  var handleClick = (0, _react.useCallback)(function () {
    var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    if (onFocus) onFocus(path);
    if (onClose) onClose();
  }, [onFocus, onClose]);

  var resolvePathTitle = path => {
    var fields = documentType && documentType.fields;
    var field = fields && fields.find(curr => curr.name === path[0]);
    return field && field.type.title || '';
  };

  var hasErrors = errors.length > 0;
  var hasWarnings = warnings.length > 0;
  var hasInfo = info.length > 0;

  if (!hasErrors && !hasWarnings && !hasInfo) {
    return null;
  }

  return /*#__PURE__*/_react.default.createElement(_ui.Container, {
    width: 0,
    "data-kind": kind,
    "data-testid": "validation-list"
  }, hasErrors && errors.map((_error, i) => /*#__PURE__*/_react.default.createElement(_listItem.ListItem // eslint-disable-next-line react/no-array-index-key
  , {
    key: i,
    truncate: truncate,
    path: resolvePathTitle(_error.path),
    marker: _error,
    onClick: handleClick
  })), hasWarnings && warnings.map((_warning, i) => /*#__PURE__*/_react.default.createElement(_listItem.ListItem // eslint-disable-next-line react/no-array-index-key
  , {
    key: i,
    truncate: truncate,
    path: resolvePathTitle(_warning.path),
    marker: _warning,
    onClick: handleClick
  })), hasInfo && info.map((_info, i) => /*#__PURE__*/_react.default.createElement(_listItem.ListItem // eslint-disable-next-line react/no-array-index-key
  , {
    key: i,
    truncate: truncate,
    path: resolvePathTitle(_info.path),
    marker: _info,
    onClick: handleClick
  })));
}