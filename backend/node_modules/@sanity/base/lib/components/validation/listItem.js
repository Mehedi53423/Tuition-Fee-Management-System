"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ListItem = ListItem;

var _react = _interopRequireWildcard(require("react"));

var _icons = require("@sanity/icons");

var _ui = require("@sanity/ui");

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _templateObject;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var StyledText = (0, _styledComponents.default)(_ui.Text)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  white-space: initial;\n"])));
var MENU_ITEM_TONES = {
  error: 'critical',
  warning: 'caution',
  info: 'primary'
};

function ListItem(props) {
  var marker = props.marker,
      onClick = props.onClick,
      path = props.path,
      truncate = props.truncate;
  var handleClick = (0, _react.useCallback)(() => {
    if (onClick) {
      onClick(marker.path);
    }
  }, [marker.path, onClick]);
  var menuItemTone = MENU_ITEM_TONES[marker === null || marker === void 0 ? void 0 : marker.level] || undefined;

  var children = /*#__PURE__*/_react.default.createElement(_ui.Flex, null, /*#__PURE__*/_react.default.createElement(_ui.Box, null, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    size: 1
  }, marker.level === 'error' && /*#__PURE__*/_react.default.createElement(_icons.ErrorOutlineIcon, null), marker.level === 'warning' && /*#__PURE__*/_react.default.createElement(_icons.WarningOutlineIcon, null), marker.level === 'info' && /*#__PURE__*/_react.default.createElement(_icons.InfoOutlineIcon, null))), /*#__PURE__*/_react.default.createElement(_ui.Stack, {
    space: 2,
    flex: 1,
    paddingLeft: 3
  }, path && /*#__PURE__*/_react.default.createElement(StyledText, {
    size: 1,
    weight: "semibold"
  }, path), marker.item.message && /*#__PURE__*/_react.default.createElement(StyledText, {
    muted: true,
    size: 1,
    textOverflow: truncate ? 'ellipsis' : undefined
  }, marker.item.message)));

  return /*#__PURE__*/_react.default.createElement(_ui.MenuItem, {
    padding: 1,
    onClick: handleClick,
    radius: 2,
    tone: menuItemTone
  }, /*#__PURE__*/_react.default.createElement(_ui.Box, {
    padding: 2
  }, children));
}