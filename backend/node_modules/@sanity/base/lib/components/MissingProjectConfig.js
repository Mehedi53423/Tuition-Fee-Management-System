"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = MissingProjectConfig;

var _react = _interopRequireDefault(require("react"));

var _configSanity = _interopRequireDefault(require("config:sanity"));

var _ui = require("@sanity/ui");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function MissingProjectConfig() {
  var root = _configSanity.default.root,
      project = _configSanity.default.project,
      plugins = _configSanity.default.plugins;

  var _ref = _configSanity.default.api || {},
      dataset = _ref.dataset,
      projectId = _ref.projectId;

  var api = {
    projectId: projectId || 'myProjectId',
    dataset: dataset || 'myDatasetName'
  };
  var desiredConfig = {
    root,
    project,
    api,
    plugins
  };
  var missing = [!projectId && '"projectId"', !dataset && '"dataset"'].filter(Boolean);
  return /*#__PURE__*/_react.default.createElement(_ui.Dialog, {
    id: "missing-project-config",
    header: "Project details missing",
    padding: 2,
    width: 1
  }, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
    space: 4,
    padding: 4
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    as: "p"
  }, "The ", /*#__PURE__*/_react.default.createElement("code", null, "sanity.json"), " file in your studio folder seems to be missing the", ' ', missing.join(' and '), " configuration ", missing.length > 1 ? 'options ' : 'option ', "under the ", /*#__PURE__*/_react.default.createElement("code", null, "api"), " key."), /*#__PURE__*/_react.default.createElement(_ui.Text, {
    as: "p"
  }, "A valid ", /*#__PURE__*/_react.default.createElement("code", null, "sanity.json"), " file looks something like the following:"), /*#__PURE__*/_react.default.createElement(_ui.Card, {
    tone: "transparent",
    padding: 4,
    radius: 2
  }, /*#__PURE__*/_react.default.createElement(_ui.Code, null, highlightMissing(JSON.stringify(desiredConfig, null, 2))))));
} // eslint-disable-next-line react/no-multi-comp


function highlightMissing(jsonConfig) {
  var parts = jsonConfig.split(/("dataset": "myDatasetName"|"projectId": "myProjectId")/).reduce((els, part, i) => {
    if (i % 2 === 0) {
      return els.concat(part);
    }

    return els.concat( /*#__PURE__*/_react.default.createElement("strong", {
      key: part
    }, part));
  }, []);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, parts);
}