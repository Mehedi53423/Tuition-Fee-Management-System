"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ExampleStory;

var _ui = require("@sanity/ui");

var _uiWorkshop = require("@sanity/ui-workshop");

var _react = _interopRequireWildcard(require("react"));

var _ElementWithChangeBar = require("../../../change-indicators/ElementWithChangeBar");

var _hooks = require("../../../_exports/hooks");

var _FormField = require("../FormField");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var DEBUG = false;

var noop = () => undefined;

function ExampleStory() {
  var inputId = 'test';
  var validationErrors = (0, _uiWorkshop.useBoolean)('Validation errors', false, 'Props');
  var title = (0, _uiWorkshop.useString)('Title', 'Title', 'Props');
  var description = (0, _uiWorkshop.useString)('Description', 'Description', 'Props');
  var isChanged = (0, _uiWorkshop.useBoolean)('Changed', false, 'Props');
  var level = (0, _uiWorkshop.useNumber)('Level', 0, 'Props');

  var _useState = (0, _react.useState)(false),
      _useState2 = _slicedToArray(_useState, 2),
      focused = _useState2[0],
      setFocused = _useState2[1];

  var _useCurrentUser = (0, _hooks.useCurrentUser)(),
      user = _useCurrentUser.value;

  var presence = (0, _react.useMemo)(() => user ? [{
    user,
    path: ['title'],
    sessionId: 'foo',
    lastActiveAt: new Date().toUTCString()
  }] : [], [user]);
  var markers = (0, _react.useMemo)(() => validationErrors ? [{
    type: 'validation',
    level: 'error',
    item: {
      message: 'Something is not right',
      // children?: ValidationError[]
      // operation?: 'AND' | 'OR'
      paths: [],
      cloneWithMessage: noop
    },
    path: []
  }] : [], [validationErrors]);
  var handleBlur = (0, _react.useCallback)(() => setFocused(false), []);
  var handleFocus = (0, _react.useCallback)(() => setFocused(true), []);
  return /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    align: "center",
    height: "fill",
    justify: "center",
    padding: 4,
    sizing: "border"
  }, /*#__PURE__*/_react.default.createElement(_ui.Container, {
    width: 1
  }, /*#__PURE__*/_react.default.createElement(_ui.LayerProvider, null, /*#__PURE__*/_react.default.createElement(_FormField.FormField, {
    __unstable_markers: markers,
    __unstable_presence: presence,
    inputId: inputId,
    level: level,
    title: title,
    description: description
  }, /*#__PURE__*/_react.default.createElement(_ElementWithChangeBar.ElementWithChangeBar, {
    isChanged: isChanged,
    hasFocus: focused
  }, /*#__PURE__*/_react.default.createElement(_ui.TextInput, {
    id: inputId,
    onBlur: handleBlur,
    onFocus: handleFocus
  })))), DEBUG && /*#__PURE__*/_react.default.createElement(_ui.Card, {
    marginTop: 4,
    overflow: "auto",
    padding: 3,
    radius: 2,
    scheme: "dark"
  }, /*#__PURE__*/_react.default.createElement(_ui.Code, {
    language: "json",
    size: 1
  }, JSON.stringify(user, null, 2)))));
}