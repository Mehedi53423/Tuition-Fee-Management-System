"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CollapseOverflowMenu = CollapseOverflowMenu;

var _ui = require("@sanity/ui");

var _react = _interopRequireDefault(require("react"));

var _excluded = ["collapsedProps", "expandedProps", "tooltipProps", "tooltipText", "dividerBefore", "fontSize", "padding", "text", "icon", "selected"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var MENU_BUTTON_POPOVER_PROPS = {
  portal: true,
  constrainSize: true,
  scheme: 'light'
};

function CollapseOverflowMenu(props) {
  var disableRestoreFocusOnClose = props.disableRestoreFocusOnClose,
      menuButton = props.menuButton,
      menuButtonProps = props.menuButtonProps,
      menuOptionsArray = props.menuOptionsArray,
      onMenuClose = props.onMenuClose;
  return /*#__PURE__*/_react.default.createElement(_ui.MenuButton, _extends({
    __unstable_disableRestoreFocusOnClose: disableRestoreFocusOnClose,
    id: "menu-button",
    onClose: onMenuClose,
    popover: MENU_BUTTON_POPOVER_PROPS
  }, menuButtonProps, {
    button: menuButton,
    menu: /*#__PURE__*/_react.default.createElement(_ui.Menu, null, menuOptionsArray.map((c, index) => {
      var _c$props = c.props,
          _c$props$collapsedPro = _c$props.collapsedProps,
          collapsedProps = _c$props$collapsedPro === void 0 ? {} : _c$props$collapsedPro,
          _c$props$expandedProp = _c$props.expandedProps,
          expandedProps = _c$props$expandedProp === void 0 ? {} : _c$props$expandedProp,
          _c$props$tooltipProps = _c$props.tooltipProps,
          tooltipProps = _c$props$tooltipProps === void 0 ? {} : _c$props$tooltipProps,
          tooltipText = _c$props.tooltipText,
          dividerBefore = _c$props.dividerBefore,
          fontSize = _c$props.fontSize,
          padding = _c$props.padding,
          text = _c$props.text,
          icon = _c$props.icon,
          selected = _c$props.selected,
          rest = _objectWithoutProperties(_c$props, _excluded);

      return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, {
        key: c.key
      }, dividerBefore && index !== 0 && /*#__PURE__*/_react.default.createElement(_ui.MenuDivider, null), /*#__PURE__*/_react.default.createElement(_ui.MenuItem, _extends({
        text: text,
        icon: icon,
        pressed: selected
      }, rest)));
    }))
  }));
}