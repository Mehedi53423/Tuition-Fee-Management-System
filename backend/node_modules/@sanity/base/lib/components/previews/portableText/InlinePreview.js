"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InlinePreview = InlinePreview;

var _react = _interopRequireWildcard(require("react"));

var _useDevicePixelRatio = require("use-device-pixel-ratio");

var _constants = require("../constants");

var _InlinePreview = require("./InlinePreview.styled");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var DEFAULT_MEDIA_DIMENSIONS = _objectSpread(_objectSpread({}, _constants.PREVIEW_MEDIA_SIZE.inline), {}, {
  fit: 'crop',
  aspect: 1,
  dpr: (0, _useDevicePixelRatio.getDevicePixelRatio)()
});

function InlinePreview(props) {
  var title = props.title,
      _props$fallbackTitle = props.fallbackTitle,
      fallbackTitle = _props$fallbackTitle === void 0 ? 'Untitled' : _props$fallbackTitle,
      media = props.media,
      _props$mediaDimension = props.mediaDimensions,
      mediaDimensions = _props$mediaDimension === void 0 ? DEFAULT_MEDIA_DIMENSIONS : _props$mediaDimension;

  var _media = (0, _react.useMemo)(() => {
    if (typeof media === 'function') {
      return media({
        dimensions: mediaDimensions,
        layout: 'inline'
      });
    }

    return media;
  }, [media, mediaDimensions]);

  return /*#__PURE__*/_react.default.createElement(_InlinePreview.RootSpan, {
    "data-testid": "inline-preview"
  }, _media && /*#__PURE__*/_react.default.createElement(_InlinePreview.MediaSpan, {
    "data-testid": "inline-preview-media"
  }, _media, /*#__PURE__*/_react.default.createElement("span", null)), /*#__PURE__*/_react.default.createElement(_InlinePreview.TextSpan, {
    "data-testid": "inline-preview-title",
    size: 1
  }, title || fallbackTitle));
}