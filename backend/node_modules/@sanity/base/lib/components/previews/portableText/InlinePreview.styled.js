"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TextSpan = exports.RootSpan = exports.MediaSpan = void 0;

var _ui = require("@sanity/ui");

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _templateObject, _templateObject2, _templateObject3;

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var RootSpan = _styledComponents.default.span(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  display: inline-flex;\n  align-items: center;\n  vertical-align: top;\n  height: calc(1em - 1px);\n  max-width: 100%;\n"])));

exports.RootSpan = RootSpan;

var MediaSpan = _styledComponents.default.span(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  position: relative;\n  display: inline-block;\n  width: calc(1em - 1px);\n  height: calc(1em - 1px);\n  min-width: calc(1em - 1px);\n\n  & img {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    border-radius: ", ";\n  }\n\n  & img + span {\n    position: absolute;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    box-shadow: inset 0 0 0 1px var(--card-fg-color);\n    opacity: 0.2;\n    border-radius: ", ";\n  }\n\n  & svg {\n    display: block;\n    font-size: calc(14 / 16 * 1em);\n    margin: 1px 0;\n\n    &[data-sanity-icon] {\n      font-size: calc(18 / 16 * 1em);\n      margin: calc(1px + (2 / 18 * -1em)) 0;\n    }\n  }\n"])), _ref => {
  var theme = _ref.theme;
  return (0, _ui.rem)(theme.sanity.radius[1]);
}, _ref2 => {
  var theme = _ref2.theme;
  return (0, _ui.rem)(theme.sanity.radius[1]);
});

exports.MediaSpan = MediaSpan;
var TextSpan = (0, _styledComponents.default)(_ui.Text).attrs({
  forwardedAs: 'span'
})(_ref3 => {
  var theme = _ref3.theme;
  var textFont = theme.sanity.fonts.text;
  var textSize = textFont.sizes[1];
  return (0, _styledComponents.css)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n    font-size: calc(", " / 16 * 1em);\n    font-weight: ", ";\n    box-sizing: border-box;\n    display: inline-block;\n    vertical-align: top;\n    line-height: ", ";\n    padding-left: 0.5em;\n    padding-right: calc(0.5em - 2px);\n    min-width: 0;\n\n    & > span {\n      display: block;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n      overflow: hidden;\n    }\n  "])), textSize.fontSize, textFont.weights.medium, textSize.lineHeight / textSize.fontSize);
});
exports.TextSpan = TextSpan;