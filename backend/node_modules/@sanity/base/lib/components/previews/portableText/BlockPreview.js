"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BlockPreview = BlockPreview;

var _ui = require("@sanity/ui");

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _useDevicePixelRatio = require("use-device-pixel-ratio");

var _Media = require("../_common/Media");

var _constants = require("../constants");

var _templateObject;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var DEFAULT_MEDIA_DIMENSIONS = _objectSpread(_objectSpread({}, _constants.PREVIEW_MEDIA_SIZE.block), {}, {
  aspect: 1,
  fit: 'crop',
  dpr: (0, _useDevicePixelRatio.getDevicePixelRatio)()
});

var HeaderFlex = (0, _styledComponents.default)(_ui.Flex).attrs({
  align: 'center'
})(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  min-height: ", ";\n"])), (0, _ui.rem)(_constants.PREVIEW_MEDIA_SIZE.block.height));

function BlockPreview(props) {
  var actions = props.actions,
      title = props.title,
      subtitle = props.subtitle,
      description = props.description,
      _props$mediaDimension = props.mediaDimensions,
      mediaDimensions = _props$mediaDimension === void 0 ? DEFAULT_MEDIA_DIMENSIONS : _props$mediaDimension,
      media = props.media,
      status = props.status,
      children = props.children,
      extendedPreview = props.extendedPreview;
  return /*#__PURE__*/_react.default.createElement(_ui.Stack, {
    "data-testid": "block-preview",
    space: 1
  }, /*#__PURE__*/_react.default.createElement(HeaderFlex, {
    "data-testid": "block-preview__header"
  }, media && /*#__PURE__*/_react.default.createElement(_Media.Media, {
    dimensions: mediaDimensions,
    layout: "block",
    media: media
  }), /*#__PURE__*/_react.default.createElement(_ui.Box, {
    flex: 1,
    paddingLeft: media ? 2 : 1
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    size: 1,
    textOverflow: "ellipsis",
    weight: "semibold"
  }, title && typeof title === 'function' ? title({
    layout: 'block'
  }) : title, !title && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, "Untitled")), subtitle && /*#__PURE__*/_react.default.createElement(_ui.Box, {
    marginTop: 2
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    muted: true,
    size: 1,
    textOverflow: "ellipsis"
  }, typeof subtitle === 'function' ? subtitle({
    layout: 'block'
  }) : subtitle)), description && /*#__PURE__*/_react.default.createElement(_ui.Box, {
    marginTop: 3
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    muted: true,
    size: 1,
    textOverflow: "ellipsis"
  }, typeof description === 'function' ? description({
    layout: 'block'
  }) : description))), /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    gap: 1,
    paddingLeft: 1
  }, status && /*#__PURE__*/_react.default.createElement(_ui.Box, {
    paddingX: 2,
    paddingY: 3
  }, typeof status === 'function' ? status({
    layout: 'block'
  }) : status), actions)), children && /*#__PURE__*/_react.default.createElement("div", {
    "data-testid": "block-preview__children"
  }, children), extendedPreview && /*#__PURE__*/_react.default.createElement("div", {
    "data-testid": "block-preview__extended"
  }, extendedPreview));
}