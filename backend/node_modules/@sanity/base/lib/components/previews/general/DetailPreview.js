"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DetailPreview = DetailPreview;

var _react = _interopRequireDefault(require("react"));

var _ui = require("@sanity/ui");

var _useDevicePixelRatio = require("use-device-pixel-ratio");

var _Media = require("../_common/Media");

var _constants = require("../constants");

var _DetailPreview = require("./DetailPreview.styled");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var DEFAULT_MEDIA_DIMENSIONS = _objectSpread(_objectSpread({}, _constants.PREVIEW_MEDIA_SIZE.detail), {}, {
  fit: 'crop',
  aspect: 1,
  dpr: (0, _useDevicePixelRatio.getDevicePixelRatio)()
});

function DetailPreview(props) {
  var title = props.title,
      subtitle = props.subtitle,
      description = props.description,
      _props$mediaDimension = props.mediaDimensions,
      mediaDimensions = _props$mediaDimension === void 0 ? DEFAULT_MEDIA_DIMENSIONS : _props$mediaDimension,
      media = props.media,
      status = props.status,
      children = props.children,
      isPlaceholder = props.isPlaceholder;

  var statusNode = status && /*#__PURE__*/_react.default.createElement(_DetailPreview.StatusBox, {
    marginLeft: 3,
    paddingRight: 1
  }, typeof status === 'function' ? status({
    layout: 'detail'
  }) : status);

  if (isPlaceholder) {
    return /*#__PURE__*/_react.default.createElement(_DetailPreview.RootFlex, {
      "data-testid": "detail-preview"
    }, media !== false && /*#__PURE__*/_react.default.createElement(_DetailPreview.MediaSkeleton, {
      "data-testid": "detail-preview__media"
    }), /*#__PURE__*/_react.default.createElement(_ui.Box, {
      flex: 1,
      paddingLeft: media === false ? 1 : 2
    }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
      align: "center",
      "data-testid": "detail-preview__header"
    }, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
      flex: 1,
      space: 2
    }, /*#__PURE__*/_react.default.createElement(_DetailPreview.TitleSkeleton, null), /*#__PURE__*/_react.default.createElement(_DetailPreview.SubtitleSkeleton, null)), statusNode), description && /*#__PURE__*/_react.default.createElement(_ui.Box, {
      marginTop: 3
    }, /*#__PURE__*/_react.default.createElement(_DetailPreview.DescriptionSkeleton, null))));
  }

  return /*#__PURE__*/_react.default.createElement(_DetailPreview.RootFlex, {
    "data-testid": "detail-preview"
  }, media !== false && /*#__PURE__*/_react.default.createElement(_Media.Media, {
    dimensions: mediaDimensions,
    layout: "detail",
    media: media
  }), /*#__PURE__*/_react.default.createElement(_ui.Box, {
    flex: 1,
    paddingLeft: media === false ? 1 : 2
  }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    align: "center",
    "data-testid": "detail-preview__header"
  }, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
    flex: 1,
    space: 2
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    textOverflow: "ellipsis",
    style: {
      color: 'inherit'
    }
  }, title && typeof title === 'function' ? title({
    layout: 'detail'
  }) : title, !title && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, "Untitled")), subtitle && /*#__PURE__*/_react.default.createElement(_ui.Text, {
    muted: true,
    size: 1,
    textOverflow: "ellipsis"
  }, typeof subtitle === 'function' ? subtitle({
    layout: 'detail'
  }) : subtitle)), statusNode), description && /*#__PURE__*/_react.default.createElement(_ui.Box, {
    marginTop: 3
  }, /*#__PURE__*/_react.default.createElement(_DetailPreview.DescriptionText, {
    muted: true,
    size: 1
  }, typeof description === 'function' ? description({
    layout: 'detail'
  }) : description))), children);
}