import React from 'react';
import { Path } from '@sanity/types';
export declare function ChangeIndicatorScope(props: {
    path: Path;
    children?: React.ReactNode;
}): JSX.Element;
export declare function ChangeIndicatorProvider(props: {
    path: Path;
    focusPath: Path;
    value: unknown;
    compareValue: unknown;
    children: React.ReactNode;
}): JSX.Element;
interface CoreProps {
    children?: React.ReactNode;
    className?: string;
    compareDeep?: boolean;
    compareValue: unknown;
    disabled?: boolean;
    fullPath: Path;
    hasFocus: boolean;
    /**
     * Callback function that returns a boolean if there are changes
     */
    onHasChanges?: (changed: boolean) => void;
    value: unknown;
    withHoverEffect?: boolean;
}
export declare function CoreChangeIndicator(props: CoreProps): JSX.Element;
export declare function ChangeIndicatorForFieldPath(props: {
    path: Path;
    isChanged: boolean;
    children: React.ReactNode;
    className?: string;
    disabled?: boolean;
    hasFocus?: boolean;
}): JSX.Element;
interface ChangeIndicatorWithProvidedFullPathProps {
    children?: React.ReactNode;
    className?: string;
    compareDeep?: boolean;
    disabled?: boolean;
    hasFocus: boolean;
    /**
     * Callback function that returns a boolean if there are changes
     */
    onHasChanges?: (changed: boolean) => void;
    path: Path;
    value: unknown;
    withHoverEffect?: boolean;
}
export declare function ChangeIndicatorWithProvidedFullPath(props: ChangeIndicatorWithProvidedFullPathProps): JSX.Element;
export interface ChangeIndicatorContextProvidedProps {
    className?: string;
    compareDeep?: boolean;
    children?: React.ReactNode;
    disabled?: boolean;
}
export declare function ChangeIndicatorCompareValueProvider(props: {
    value: unknown;
    compareValue: unknown;
    children: React.ReactNode;
}): JSX.Element;
export declare function ContextProvidedChangeIndicator(props: ChangeIndicatorContextProvidedProps): React.ReactElement;
export declare const ChangeIndicator: typeof ContextProvidedChangeIndicator;
export {};
//# sourceMappingURL=ChangeIndicator.d.ts.map