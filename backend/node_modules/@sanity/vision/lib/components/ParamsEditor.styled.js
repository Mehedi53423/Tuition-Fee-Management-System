"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ReactCodeMirror = void 0;

var _reactCodemirror = require("react-codemirror2");

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _ui = require("@sanity/ui");

var _templateObject, _templateObject2;

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

require('codemirror/mode/javascript/javascript');

require('codemirror/addon/hint/show-hint');

require('codemirror/addon/edit/closebrackets');

var ReactCodeMirror = (0, _styledComponents.default)(_reactCodemirror.UnControlled)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  flex: 1;\n  overflow: hidden;\n  position: relative;\n\n  .CodeMirror {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    position: relative;\n    font-family: ", ";\n    font-size: ", ";\n    line-height: inherit;\n  }\n\n  & > .CodeMirror:after {\n    background-color: ", ";\n    content: '';\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    pointer-events: none;\n    z-index: 0;\n  }\n\n  .CodeMirror-sizer {\n    padding-top: ", ";\n  }\n\n  .CodeMirror-linenumber {\n    padding: 0 3px 0 5px;\n    min-width: 1.5rem;\n    text-align: right;\n    color: var(--card-code-fg-color);\n    white-space: nowrap;\n  }\n\n  .CodeMirror-gutters {\n    background-color: var(--card-code-bg-color) !important;\n  }\n"])), _ref => {
  var theme = _ref.theme;
  return theme.sanity.fonts.code.family;
}, _ref2 => {
  var theme = _ref2.theme;
  return (0, _ui.rem)(theme.sanity.fonts.code.sizes[1].fontSize);
}, _ref3 => {
  var $isInvalid = _ref3.$isInvalid;
  return $isInvalid && (0, _styledComponents.css)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["var(--card-bg-color)"])));
}, _ref4 => {
  var theme = _ref4.theme;
  return (0, _ui.rem)(theme.sanity.space[5]);
});
exports.ReactCodeMirror = ReactCodeMirror;