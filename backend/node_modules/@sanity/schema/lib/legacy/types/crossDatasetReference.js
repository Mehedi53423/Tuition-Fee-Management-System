"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WEAK_FIELD = exports.REF_FIELD = exports.CrossDatasetReferenceType = void 0;

var _pick2 = _interopRequireDefault(require("lodash/pick"));

var _capitalize2 = _interopRequireDefault(require("lodash/capitalize"));

var _arrify = _interopRequireDefault(require("arrify"));

var _normalize = require("../searchConfig/normalize");

var _utils = require("./utils");

var _constants = require("./constants");

var _excluded = ["name"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var REF_FIELD = {
  name: '_ref',
  title: 'Referenced document ID',
  type: 'string'
};
exports.REF_FIELD = REF_FIELD;
var WEAK_FIELD = {
  name: '_weak',
  title: 'Weak reference marker',
  type: 'boolean'
};
exports.WEAK_FIELD = WEAK_FIELD;
var REFERENCE_FIELDS = [REF_FIELD, WEAK_FIELD];
var OVERRIDABLE_FIELDS = [..._constants.DEFAULT_OVERRIDEABLE_FIELDS];
var CROSS_DATASET_REFERENCE_CORE = {
  name: 'crossDatasetReference',
  type: null,
  jsonType: 'object'
};

function humanize(arr, conjunction) {
  var len = arr.length;

  if (len === 1) {
    return arr[0];
  }

  var first = arr.slice(0, len - 1);
  var last = arr[len - 1];
  return "".concat(first.join(', '), " ").concat(conjunction, " ").concat(last);
}

function buildTitle(type) {
  if (!type.to || type.to.length === 0) {
    return 'Cross dataset Reference';
  }

  return "Cross dataset reference to ".concat(humanize((0, _arrify.default)(type.to).map(toType => toType.title || (0, _capitalize2.default)(toType.type)), 'or').toLowerCase());
}

var CrossDatasetReferenceType = {
  get() {
    return CROSS_DATASET_REFERENCE_CORE;
  },

  extend(subTypeDef, createMemberType) {
    if (!subTypeDef.to) {
      throw new Error("Missing \"to\" field in cross dataset reference definition. Check the type ".concat(subTypeDef.name));
    }

    var parsed = Object.assign((0, _pick2.default)(CROSS_DATASET_REFERENCE_CORE, OVERRIDABLE_FIELDS), subTypeDef, {
      type: CROSS_DATASET_REFERENCE_CORE
    });
    (0, _utils.lazyGetter)(parsed, 'fields', () => {
      return REFERENCE_FIELDS.map(fieldDef => {
        var name = fieldDef.name,
            type = _objectWithoutProperties(fieldDef, _excluded);

        return {
          name: name,
          type: createMemberType(type)
        };
      });
    });
    (0, _utils.lazyGetter)(parsed, 'to', () => {
      return (0, _arrify.default)(subTypeDef.to).map(toType => {
        return _objectSpread(_objectSpread({}, toType), {}, {
          // eslint-disable-next-line camelcase
          __experimental_search: (0, _normalize.normalizeSearchConfigs)(toType.__experimental_search)
        });
      });
    });
    (0, _utils.lazyGetter)(parsed, 'title', () => subTypeDef.title || buildTitle(parsed));
    return subtype(parsed);

    function subtype(parent) {
      return {
        get() {
          return parent;
        },

        extend: extensionDef => {
          if (extensionDef.of) {
            throw new Error('Cannot override `of` of subtypes of "reference"');
          }

          var current = Object.assign({}, parent, (0, _pick2.default)(extensionDef, OVERRIDABLE_FIELDS), {
            type: parent
          });
          return subtype(current);
        }
      };
    }
  }

};
exports.CrossDatasetReferenceType = CrossDatasetReferenceType;