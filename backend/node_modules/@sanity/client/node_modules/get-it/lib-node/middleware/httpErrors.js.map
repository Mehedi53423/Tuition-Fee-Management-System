{"version":3,"sources":["../../src/middleware/httpErrors.js"],"names":["createErrorClass","require","HttpError","res","ctx","truncatedUrl","url","length","slice","msg","method","statusCode","statusMessage","message","trim","response","request","options","module","exports","onResponse","isHttpError"],"mappings":";;AAAA,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,oBAAD,CAAhC;;AAEA,MAAMC,SAAS,GAAGF,gBAAgB,CAAC,WAAD,EAAc,UAASG,GAAT,EAAcC,GAAd,EAAmB;AACjE,QAAMC,YAAY,GAAGF,GAAG,CAACG,GAAJ,CAAQC,MAAR,GAAiB,GAAjB,GAAwB,GAAEJ,GAAG,CAACG,GAAJ,CAAQE,KAAR,CAAc,CAAd,EAAiB,GAAjB,CAAsB,GAAhD,GAAqDL,GAAG,CAACG,GAA9E;AACA,MAAIG,GAAG,GAAI,GAAEN,GAAG,CAACO,MAAO,eAAcL,YAAa,eAAnD;AACAI,EAAAA,GAAG,IAAK,QAAON,GAAG,CAACQ,UAAW,IAAGR,GAAG,CAACS,aAAc,EAAnD;AAEA,OAAKC,OAAL,GAAeJ,GAAG,CAACK,IAAJ,EAAf;AACA,OAAKC,QAAL,GAAgBZ,GAAhB;AACA,OAAKa,OAAL,GAAeZ,GAAG,CAACa,OAAnB;AACD,CARiC,CAAlC;;AAUAC,MAAM,CAACC,OAAP,GAAiB,OAAO;AACtBC,EAAAA,UAAU,EAAE,CAACjB,GAAD,EAAMC,GAAN,KAAc;AACxB,UAAMiB,WAAW,GAAGlB,GAAG,CAACQ,UAAJ,IAAkB,GAAtC;;AACA,QAAI,CAACU,WAAL,EAAkB;AAChB,aAAOlB,GAAP;AACD;;AAED,UAAM,IAAID,SAAJ,CAAcC,GAAd,EAAmBC,GAAnB,CAAN;AACD;AARqB,CAAP,CAAjB","sourcesContent":["const createErrorClass = require('create-error-class')\n\nconst HttpError = createErrorClass('HttpError', function(res, ctx) {\n  const truncatedUrl = res.url.length > 400 ? `${res.url.slice(0, 399)}â€¦` : res.url\n  let msg = `${res.method}-request to ${truncatedUrl} resulted in `\n  msg += `HTTP ${res.statusCode} ${res.statusMessage}`\n\n  this.message = msg.trim()\n  this.response = res\n  this.request = ctx.options\n})\n\nmodule.exports = () => ({\n  onResponse: (res, ctx) => {\n    const isHttpError = res.statusCode >= 400\n    if (!isHttpError) {\n      return res\n    }\n\n    throw new HttpError(res, ctx)\n  }\n})\n"],"file":"httpErrors.js"}