{"version":3,"sources":["../../src/middleware/httpErrors.js"],"names":["createErrorClass","require","HttpError","res","ctx","truncatedUrl","url","length","slice","msg","method","statusCode","statusMessage","message","trim","response","request","options","module","exports","onResponse","isHttpError"],"mappings":";;AAAA,IAAMA,gBAAgB,GAAGC,OAAO,CAAC,oBAAD,CAAhC;;AAEA,IAAMC,SAAS,GAAGF,gBAAgB,CAAC,WAAD,EAAc,UAASG,GAAT,EAAcC,GAAd,EAAmB;AACjE,MAAMC,YAAY,GAAGF,GAAG,CAACG,GAAJ,CAAQC,MAAR,GAAiB,GAAjB,aAA0BJ,GAAG,CAACG,GAAJ,CAAQE,KAAR,CAAc,CAAd,EAAiB,GAAjB,CAA1B,cAAqDL,GAAG,CAACG,GAA9E;AACA,MAAIG,GAAG,aAAMN,GAAG,CAACO,MAAV,yBAA+BL,YAA/B,kBAAP;AACAI,EAAAA,GAAG,mBAAYN,GAAG,CAACQ,UAAhB,cAA8BR,GAAG,CAACS,aAAlC,CAAH;AAEA,OAAKC,OAAL,GAAeJ,GAAG,CAACK,IAAJ,EAAf;AACA,OAAKC,QAAL,GAAgBZ,GAAhB;AACA,OAAKa,OAAL,GAAeZ,GAAG,CAACa,OAAnB;AACD,CARiC,CAAlC;;AAUAC,MAAM,CAACC,OAAP,GAAiB;AAAA,SAAO;AACtBC,IAAAA,UAAU,EAAE,oBAACjB,GAAD,EAAMC,GAAN,EAAc;AACxB,UAAMiB,WAAW,GAAGlB,GAAG,CAACQ,UAAJ,IAAkB,GAAtC;;AACA,UAAI,CAACU,WAAL,EAAkB;AAChB,eAAOlB,GAAP;AACD;;AAED,YAAM,IAAID,SAAJ,CAAcC,GAAd,EAAmBC,GAAnB,CAAN;AACD;AARqB,GAAP;AAAA,CAAjB","sourcesContent":["const createErrorClass = require('create-error-class')\n\nconst HttpError = createErrorClass('HttpError', function(res, ctx) {\n  const truncatedUrl = res.url.length > 400 ? `${res.url.slice(0, 399)}â€¦` : res.url\n  let msg = `${res.method}-request to ${truncatedUrl} resulted in `\n  msg += `HTTP ${res.statusCode} ${res.statusMessage}`\n\n  this.message = msg.trim()\n  this.response = res\n  this.request = ctx.options\n})\n\nmodule.exports = () => ({\n  onResponse: (res, ctx) => {\n    const isHttpError = res.statusCode >= 400\n    if (!isHttpError) {\n      return res\n    }\n\n    throw new HttpError(res, ctx)\n  }\n})\n"],"file":"httpErrors.js"}