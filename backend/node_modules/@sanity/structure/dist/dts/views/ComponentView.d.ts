import { SerializeOptions } from '../StructureNodes';
import { FixMe } from '../types';
import { View, GenericViewBuilder } from './View';
export interface ComponentView extends View {
    component: FixMe;
    options: {
        [key: string]: any;
    };
}
export declare class ComponentViewBuilder extends GenericViewBuilder<Partial<ComponentView>, ComponentViewBuilder> {
    protected spec: Partial<ComponentView>;
    constructor(componentOrSpec?: FixMe | Partial<ComponentView>);
    component(component: FixMe): ComponentViewBuilder;
    getComponent(): Function | undefined;
    options(options: {
        [key: string]: any;
    }): ComponentViewBuilder;
    getOptions(): {
        [key: string]: any;
    };
    serialize(options?: SerializeOptions): ComponentView;
    clone(withSpec?: Partial<ComponentView>): ComponentViewBuilder;
}
//# sourceMappingURL=ComponentView.d.ts.map