import { SanityDocument } from '@sanity/types';
import { Observable } from 'rxjs';
import { DocumentPaneNode } from '../../../types';
interface InitialValueOptions {
    documentId: string;
    paneOptions: DocumentPaneNode['options'];
    panePayload?: unknown;
    urlTemplate?: string;
}
interface InitialValueLoadingMsg {
    type: 'loading';
}
interface InitialValueSuccessMsg {
    type: 'success';
    value: Partial<SanityDocument> | null;
}
interface InitialValueErrorMsg {
    type: 'error';
    error: Error;
}
declare type InitialValueMsg = InitialValueLoadingMsg | InitialValueSuccessMsg | InitialValueErrorMsg;
/**
 * @internal
 */
export declare function getInitialValueObservable(opts: InitialValueOptions): Observable<InitialValueMsg>;
export {};
//# sourceMappingURL=getInitialValue.d.ts.map