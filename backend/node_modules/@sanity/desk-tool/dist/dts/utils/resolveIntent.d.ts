import { RouterPanes, UnresolvedPaneNode } from '../types';
export interface ResolveIntentOptions {
    rootPaneNode?: UnresolvedPaneNode;
    intent: string;
    params: {
        type: string;
        id: string;
        [key: string]: string | undefined;
    };
    payload: unknown;
}
/**
 * Resolves an intent request using breadth first search. If a match is not
 * found, the intent will resolve to the fallback editor.
 *
 * A match is found if:
 * 1. the `PaneNode` is of type `document` and the its ID matches the intent ID
 * 2. the `PaneNode` is of type `documentList` and the `schemaTypeName` matches
 * 3. the `PaneNode`'s `canHandleIntent` method returns true
 *
 * If a `PaneNode` of type `list` is found, it will be searched for a match.
 *
 * @see PaneNode
 */
export declare function resolveIntent(options: ResolveIntentOptions): Promise<RouterPanes>;
//# sourceMappingURL=resolveIntent.d.ts.map