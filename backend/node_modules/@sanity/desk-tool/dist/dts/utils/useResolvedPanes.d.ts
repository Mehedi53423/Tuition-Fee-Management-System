import { LOADING_PANE } from '../constants';
import { RouterPanes, PaneNode } from '../types';
interface PaneData {
    active: boolean;
    childItemId: string | null;
    groupIndex: number;
    index: number;
    itemId: string;
    key: string;
    pane: PaneNode | typeof LOADING_PANE;
    params: Record<string, string | undefined>;
    path: string;
    payload: unknown;
    selected: boolean;
    siblingIndex: number;
}
interface Panes {
    paneDataItems: PaneData[];
    routerPanes: RouterPanes;
    resolvedPanes: (PaneNode | typeof LOADING_PANE)[];
}
export declare function useResolvedPanes(): Panes;
export {};
//# sourceMappingURL=useResolvedPanes.d.ts.map