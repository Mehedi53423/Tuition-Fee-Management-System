"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _router = require("@sanity/base/router");

var _icons = require("@sanity/icons");

var _ui = require("@sanity/ui");

var _react = _interopRequireWildcard(require("react"));

var _intentResolver = require("../components/intentResolver");

var _StructureError = require("../components/StructureError");

var _DeskTool = require("../DeskTool");

var _getIntentState = require("../getIntentState");

var _router2 = require("../router");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var _default = {
  router: _router2.router,
  canHandleIntent,
  getIntentState: _getIntentState.getIntentState,
  title: 'Desk',
  name: 'desk',
  icon: _icons.MasterDetailIcon,
  component: DeskToolRoot
};
exports.default = _default;

function canHandleIntent(intentName, params) {
  return Boolean(intentName === 'edit' && params.id || intentName === 'create' && params.type || intentName === 'create' && params.template);
}

function DeskToolRoot() {
  var _useRouterState = (0, _router.useRouterState)(),
      intent = _useRouterState.intent,
      params = _useRouterState.params,
      payload = _useRouterState.payload;

  (0, _react.useEffect)(() => {
    // Set active panes to blank on mount and unmount
    (0, _getIntentState.setActivePanes)([]);
    return () => (0, _getIntentState.setActivePanes)([]);
  }, []);

  var _useState = (0, _react.useState)(null),
      _useState2 = _slicedToArray(_useState, 2),
      error = _useState2[0],
      setError = _useState2[1];

  var handleCatch = (0, _react.useCallback)(e => {
    setError(e.error);
  }, []);
  if (error) return /*#__PURE__*/_react.default.createElement(_StructureError.StructureError, {
    error: error
  });
  return /*#__PURE__*/_react.default.createElement(_ui.ErrorBoundary, {
    onCatch: handleCatch
  }, intent ? /*#__PURE__*/_react.default.createElement(_intentResolver.IntentResolver, {
    intent: intent,
    params: params,
    payload: payload
  }) : /*#__PURE__*/_react.default.createElement(_DeskTool.DeskTool, {
    onPaneChange: _getIntentState.setActivePanes
  }));
}