"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DocumentHeaderTabs = DocumentHeaderTabs;

var _react = _interopRequireWildcard(require("react"));

var _ui = require("@sanity/ui");

var _paneRouter = require("../../../../contexts/paneRouter");

var _useDocumentPane3 = require("../../useDocumentPane");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function DocumentHeaderTabs() {
  var _useDocumentPane = (0, _useDocumentPane3.useDocumentPane)(),
      activeViewId = _useDocumentPane.activeViewId,
      paneKey = _useDocumentPane.paneKey,
      views = _useDocumentPane.views;

  var tabPanelId = "".concat(paneKey, "tabpanel");
  return /*#__PURE__*/_react.default.createElement(_ui.TabList, {
    space: 1
  }, views.map((view, index) => {
    var _view$id;

    return /*#__PURE__*/_react.default.createElement(DocumentHeaderTab, {
      icon: view.icon,
      id: "".concat(paneKey, "tab-").concat(view.id),
      isActive: activeViewId === view.id,
      key: view.id,
      label: /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, view.title),
      tabPanelId: tabPanelId,
      viewId: index === 0 ? null : (_view$id = view.id) !== null && _view$id !== void 0 ? _view$id : null
    });
  }));
}

function DocumentHeaderTab(props) {
  var icon = props.icon,
      id = props.id,
      isActive = props.isActive,
      label = props.label,
      tabPanelId = props.tabPanelId,
      viewId = props.viewId;

  var _useDocumentPane2 = (0, _useDocumentPane3.useDocumentPane)(),
      ready = _useDocumentPane2.ready;

  var _usePaneRouter = (0, _paneRouter.usePaneRouter)(),
      setView = _usePaneRouter.setView;

  var handleClick = (0, _react.useCallback)(() => setView(viewId), [setView, viewId]);
  return /*#__PURE__*/_react.default.createElement(_ui.Tab, {
    "aria-controls": tabPanelId,
    disabled: !ready,
    fontSize: 1,
    icon: icon,
    id: id,
    selected: isActive,
    label: label,
    onClick: handleClick
  });
}