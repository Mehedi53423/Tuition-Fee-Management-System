"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TimelineItem = TimelineItem;

var _react = _interopRequireWildcard(require("react"));

var _hooks = require("@sanity/base/hooks");

var _ui = require("@sanity/ui");

var _helpers = require("./helpers");

var _userAvatarStack = require("./userAvatarStack");

var _timelineItem = require("./timelineItem.styled");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var TIMELINE_ITEM_EVENT_TONE = {
  initial: 'primary',
  create: 'primary',
  publish: 'positive',
  editLive: 'caution',
  editDraft: 'caution',
  unpublish: 'critical',
  discardDraft: 'critical',
  delete: 'critical',
  withinSelection: 'primary'
};

function TimelineItem(props) {
  var isSelectionBottom = props.isSelectionBottom,
      isSelectionTop = props.isSelectionTop,
      state = props.state,
      onSelect = props.onSelect,
      timestamp = props.timestamp,
      chunk = props.chunk,
      type = props.type;
  var iconComponent = (0, _helpers.getTimelineEventIconComponent)(type);
  var authorUserIds = Array.from(chunk.authors);
  var timeAgo = (0, _hooks.useTimeAgo)(timestamp, {
    minimal: true
  });
  var isSelected = state === 'selected';
  var isWithinSelection = state === 'withinSelection';

  var _useState = (0, _react.useState)(false),
      _useState2 = _slicedToArray(_useState, 2),
      isHovered = _useState2[0],
      setHovered = _useState2[1];

  var handleClick = (0, _react.useCallback)(evt => {
    evt.preventDefault();
    evt.stopPropagation();
    onSelect(chunk);
  }, [onSelect, chunk]);
  return /*#__PURE__*/_react.default.createElement(_timelineItem.Root, {
    "data-ui": "timelineItem",
    radius: 2,
    "data-chunk-id": chunk.id,
    paddingY: 0,
    paddingX: 2,
    tone: isHovered || isSelected || isWithinSelection ? 'default' : TIMELINE_ITEM_EVENT_TONE[type],
    pressed: isWithinSelection,
    state: state,
    selected: isSelected,
    isHovered: isHovered,
    disabled: state === 'disabled',
    "data-selection-bottom": isSelectionBottom,
    "data-selection-top": isSelectionTop,
    onClick: handleClick
  }, /*#__PURE__*/_react.default.createElement("div", {
    // eslint-disable-next-line react/jsx-no-bind
    onMouseEnter: () => setHovered(true) // eslint-disable-next-line react/jsx-no-bind
    ,
    onMouseLeave: () => setHovered(false)
  }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    align: "stretch"
  }, /*#__PURE__*/_react.default.createElement(_timelineItem.IconWrapper, {
    align: "center"
  }, /*#__PURE__*/_react.default.createElement(_timelineItem.IconBox, {
    padding: 2
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    size: 2
  }, iconComponent && /*#__PURE__*/(0, _react.createElement)(iconComponent)))), /*#__PURE__*/_react.default.createElement(_ui.Stack, {
    space: 2,
    margin: 2
  }, /*#__PURE__*/_react.default.createElement(_ui.Box, null, /*#__PURE__*/_react.default.createElement(_timelineItem.EventLabel, {
    size: 1,
    weight: "medium"
  }, (0, _helpers.formatTimelineEventLabel)(type) || /*#__PURE__*/_react.default.createElement("code", null, type))), /*#__PURE__*/_react.default.createElement(_ui.Text, {
    size: 0,
    muted: true
  }, timeAgo)), /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    flex: 1,
    justify: "flex-end",
    align: "center"
  }, /*#__PURE__*/_react.default.createElement(_userAvatarStack.UserAvatarStack, {
    maxLength: 3,
    userIds: authorUserIds
  })))));
}