"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ChangeConnectorsStory;

var _components = require("@sanity/base/components");

var _icons = require("@sanity/icons");

var _ui = require("@sanity/ui");

var _uiWorkshop = require("@sanity/ui-workshop");

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _Pane = require("../Pane");

var _PaneContent = require("../PaneContent");

var _PaneFooter = require("../PaneFooter");

var _PaneHeader = require("../PaneHeader");

var _PaneLayout = require("../PaneLayout");

var _templateObject, _templateObject2, _templateObject3;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var TestContainer = (0, _styledComponents.default)(_ui.Container).attrs({
  height: 'fill',
  width: 1
})(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  max-height: 600px;\n"])));
var Root = (0, _styledComponents.default)(_components.ChangeConnectorRoot)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  height: 100%;\n  outline: 1px solid var(--card-border-color);\n  position: relative;\n"])));
var Scroller = (0, _styledComponents.default)(_components.ScrollContainer)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n"])));

function ChangeConnectorsStory() {
  var _useState = (0, _react.useState)(false),
      _useState2 = _slicedToArray(_useState, 2),
      reviewChanges = _useState2[0],
      setReviewChanges = _useState2[1];

  var onSetFocus = (0, _react.useCallback)(() => undefined, []);

  var _useState3 = (0, _react.useState)([]),
      _useState4 = _slicedToArray(_useState3, 2),
      focusPath = _useState4[0],
      setFocusPath = _useState4[1];

  var toggleReviewChanges = (0, _react.useCallback)(() => setReviewChanges(v => !v), []);
  var openReviewChanges = (0, _react.useCallback)(() => setReviewChanges(true), []);
  var closeReviewChanges = (0, _react.useCallback)(() => setReviewChanges(false), []);

  var _useState5 = (0, _react.useState)(null),
      _useState6 = _slicedToArray(_useState5, 2),
      portalElement = _useState6[0],
      setPortalElement = _useState6[1];

  var _useState7 = (0, _react.useState)(null),
      _useState8 = _slicedToArray(_useState7, 2),
      documentContentElement = _useState8[0],
      setdocumentContentElement = _useState8[1];

  var handleLayoutCollapse = (0, _uiWorkshop.useAction)('PaneLayout.onCollapse');
  var handleLayoutExpand = (0, _uiWorkshop.useAction)('PaneLayout.onExpand');
  return /*#__PURE__*/_react.default.createElement(_ui.LayerProvider, null, /*#__PURE__*/_react.default.createElement(_ui.Card, {
    height: "fill",
    tone: "transparent"
  }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    align: "center",
    height: "fill",
    justify: "center",
    padding: 4,
    sizing: "border"
  }, /*#__PURE__*/_react.default.createElement(TestContainer, null, /*#__PURE__*/_react.default.createElement(Root, {
    isReviewChangesOpen: reviewChanges,
    onOpenReviewChanges: openReviewChanges,
    onSetFocus: onSetFocus
  }, /*#__PURE__*/_react.default.createElement(_PaneLayout.PaneLayout, {
    height: "fill",
    minWidth: 512,
    onCollapse: handleLayoutCollapse,
    onExpand: handleLayoutExpand
  }, /*#__PURE__*/_react.default.createElement(_Pane.Pane, {
    id: "document-panel"
  }, /*#__PURE__*/_react.default.createElement(_PaneHeader.PaneHeader, {
    title: "Document"
  }), /*#__PURE__*/_react.default.createElement(_PaneContent.PaneContent, {
    ref: setdocumentContentElement
  }, /*#__PURE__*/_react.default.createElement(_ui.BoundaryElementProvider, {
    element: documentContentElement
  }, /*#__PURE__*/_react.default.createElement(_ui.PortalProvider, {
    element: portalElement
  }, /*#__PURE__*/_react.default.createElement(Scroller, null, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
    paddingX: 4,
    paddingY: 5,
    space: 5
  }, /*#__PURE__*/_react.default.createElement(StringField, {
    focusPath: focusPath,
    path: ['a'],
    value: "A",
    compareValue: "B",
    setFocusPath: setFocusPath
  }), /*#__PURE__*/_react.default.createElement(StringField, {
    focusPath: focusPath,
    path: ['b'],
    value: "B",
    compareValue: "C",
    setFocusPath: setFocusPath
  }), /*#__PURE__*/_react.default.createElement(StringField, {
    focusPath: focusPath,
    path: ['c'],
    value: "C",
    compareValue: "D",
    setFocusPath: setFocusPath
  }), /*#__PURE__*/_react.default.createElement(StringField, {
    focusPath: focusPath,
    path: ['d'],
    value: "D",
    compareValue: "D",
    setFocusPath: setFocusPath
  }), /*#__PURE__*/_react.default.createElement(StringField, {
    focusPath: focusPath,
    path: ['e'],
    value: "D",
    compareValue: "D",
    setFocusPath: setFocusPath
  }), /*#__PURE__*/_react.default.createElement(StringField, {
    focusPath: focusPath,
    path: ['f'],
    value: "D",
    compareValue: "D",
    setFocusPath: setFocusPath
  }), /*#__PURE__*/_react.default.createElement(StringField, {
    focusPath: focusPath,
    path: ['g'],
    value: "D",
    compareValue: "D",
    setFocusPath: setFocusPath
  }), /*#__PURE__*/_react.default.createElement(StringField, {
    focusPath: focusPath,
    path: ['h'],
    value: "D",
    compareValue: "D",
    setFocusPath: setFocusPath
  }))), /*#__PURE__*/_react.default.createElement("div", {
    ref: setPortalElement
  })))), /*#__PURE__*/_react.default.createElement(_PaneFooter.PaneFooter, {
    padding: 2
  }, /*#__PURE__*/_react.default.createElement(_ui.Button, {
    icon: _icons.RestoreIcon,
    mode: "bleed",
    onClick: toggleReviewChanges,
    selected: reviewChanges
  }))), reviewChanges && /*#__PURE__*/_react.default.createElement(_Pane.Pane, {
    id: "review-changes-panel"
  }, /*#__PURE__*/_react.default.createElement(_PaneHeader.PaneHeader, {
    actions: /*#__PURE__*/_react.default.createElement(_ui.Button, {
      icon: _icons.CloseIcon,
      mode: "bleed",
      onClick: closeReviewChanges
    }),
    title: "Changes"
  }), /*#__PURE__*/_react.default.createElement(_PaneContent.PaneContent, null, /*#__PURE__*/_react.default.createElement(Scroller, null, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
    flex: 1,
    paddingX: 4,
    paddingY: 5,
    space: 5
  }, /*#__PURE__*/_react.default.createElement(DebugDiffField, {
    path: ['a']
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, null, "Diff A")), /*#__PURE__*/_react.default.createElement(DebugDiffField, {
    path: ['b']
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, null, "Diff B")), /*#__PURE__*/_react.default.createElement(DebugDiffField, {
    path: ['c']
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, null, "Diff C"))))))))))));
}

function StringField(props) {
  var focusPath = props.focusPath,
      path = props.path,
      value = props.value,
      compareValue = props.compareValue,
      setFocusPath = props.setFocusPath;

  var _useState9 = (0, _react.useState)(false),
      _useState10 = _slicedToArray(_useState9, 2),
      open = _useState10[0],
      setOpen = _useState10[1];

  var handleBlur = (0, _react.useCallback)(() => setFocusPath([]), [setFocusPath]);
  var handleFocus = (0, _react.useCallback)(() => setFocusPath(path), [path, setFocusPath]);
  var handleClose = (0, _react.useCallback)(() => setOpen(false), []);
  var handleOpen = (0, _react.useCallback)(() => setOpen(true), []);
  return /*#__PURE__*/_react.default.createElement(_ui.Stack, {
    space: 2
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    size: 1,
    weight: "semibold"
  }, "String"), /*#__PURE__*/_react.default.createElement(DebugFormField, {
    path: path,
    focusPath: focusPath,
    value: value,
    compareValue: compareValue
  }, /*#__PURE__*/_react.default.createElement(_ui.TextInput, {
    onBlur: handleBlur,
    onFocus: handleFocus,
    value: value
  })), /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement(_ui.Button, {
    icon: /*#__PURE__*/_react.default.createElement(_icons.AddIcon, null),
    mode: "ghost",
    onClick: handleOpen
  })), open && /*#__PURE__*/_react.default.createElement(_ui.DialogProvider, {
    position: "absolute"
  }, /*#__PURE__*/_react.default.createElement(_ui.Dialog, {
    id: "".concat(path.join('-'), "-dialog"),
    onClickOutside: handleClose
  }, /*#__PURE__*/_react.default.createElement(_ui.Box, {
    padding: 4
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, null, "Dialog")))));
}

function DebugFormField(props) {
  var children = props.children,
      focusPath = props.focusPath,
      path = props.path,
      value = props.value,
      compareValue = props.compareValue;
  return /*#__PURE__*/_react.default.createElement(_components.ChangeIndicatorProvider, {
    path: path,
    focusPath: focusPath,
    value: value,
    compareValue: compareValue
  }, /*#__PURE__*/_react.default.createElement(_components.ChangeIndicator, null, children));
}

function DebugDiffField(props) {
  var children = props.children,
      path = props.path;

  var _useState11 = (0, _react.useState)(false),
      _useState12 = _slicedToArray(_useState11, 2),
      hovered = _useState12[0],
      setHovered = _useState12[1];

  var handleMouseEnter = (0, _react.useCallback)(() => setHovered(true), []);
  var handleMouseLeave = (0, _react.useCallback)(() => setHovered(false), []);
  var handleClick = (0, _react.useCallback)(() => {//
  }, []);
  return /*#__PURE__*/_react.default.createElement(_ui.Stack, {
    space: 2
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    size: 1,
    weight: "semibold"
  }, "String"), /*#__PURE__*/_react.default.createElement(_components.ChangeFieldWrapper, {
    hasHover: hovered,
    path: path
  }, /*#__PURE__*/_react.default.createElement(_ui.Card, {
    borderLeft: true,
    onClick: handleClick,
    padding: 3,
    onMouseEnter: handleMouseEnter,
    onMouseLeave: handleMouseLeave
  }, children)));
}