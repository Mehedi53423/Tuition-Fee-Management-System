"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PaneContextMenuButton = PaneContextMenuButton;

var _autoId = require("@reach/auto-id");

var _router = require("@sanity/base/router");

var _icons = require("@sanity/icons");

var _ui = require("@sanity/ui");

var _react = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var CONTEXT_MENU_POPOVER_PROPS = {
  constrainSize: true,
  placement: 'bottom',
  portal: true
};
/**
 * @beta This API will change. DO NOT USE IN PRODUCTION.
 */

function PaneContextMenuButton(props) {
  var items = props.items,
      itemGroups = props.itemGroups,
      onAction = props.onAction;
  var id = (0, _autoId.useId)() || '';
  var groups = (0, _react.useMemo)(() => {
    if (!itemGroups || itemGroups.length === 0) {
      return [{
        id: '$default',
        items
      }];
    }

    var defaultGroup = {
      id: '$default',
      items: []
    };
    var groupMap = itemGroups.reduce((acc, group) => {
      acc[group.id] = {
        id: group.id,
        title: group.title,
        items: []
      };
      return acc;
    }, {});

    var _iterator = _createForOfIteratorHelper(items),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var item = _step.value;
        var group = groupMap[item.group || '$default'] || defaultGroup;
        group.items.push(item);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }

    return Object.values(groupMap).concat([defaultGroup]).filter(g => g.items.length > 0);
  }, [items, itemGroups]);
  return /*#__PURE__*/_react.default.createElement(_ui.MenuButton, {
    button: /*#__PURE__*/_react.default.createElement(_ui.Button, {
      icon: _icons.EllipsisVerticalIcon,
      mode: "bleed",
      padding: 3,
      title: "Show menu"
    }),
    id: id,
    menu: /*#__PURE__*/_react.default.createElement(_ui.Menu, null, groups.map((group, groupIndex) =>
    /*#__PURE__*/
    // eslint-disable-next-line react/no-array-index-key
    _react.default.createElement(_react.Fragment, {
      key: groupIndex
    }, groupIndex > 0 && /*#__PURE__*/_react.default.createElement(_ui.MenuDivider, null), group.title && /*#__PURE__*/_react.default.createElement(_ui.Box, {
      paddingX: 3,
      paddingTop: 3,
      paddingBottom: 2
    }, /*#__PURE__*/_react.default.createElement(_ui.Label, {
      muted: true
    }, group.title)), group.items.map((item, itemIndex) => /*#__PURE__*/_react.default.createElement(PaneContextMenuItem, {
      item: item // eslint-disable-next-line react/no-array-index-key
      ,
      key: "".concat(itemIndex, "-").concat(item.title),
      onAction: onAction
    }))))),
    popover: CONTEXT_MENU_POPOVER_PROPS,
    portal: true
  });
}

function PaneContextMenuItem(props) {
  var item = props.item,
      onAction = props.onAction;
  var handleClick = (0, _react.useCallback)(() => {
    onAction(item);
  }, [item, onAction]);
  var hotkeys = (0, _react.useMemo)(() => {
    if (!item.shortcut) return undefined;
    return item.shortcut.split('+');
  }, [item]);
  var IntentButtonOrActionButton = /*#__PURE__*/(0, _react.forwardRef)((linkProps, linkRef) => item.intent ? /*#__PURE__*/_react.default.createElement(_router.IntentLink, _extends({}, linkProps, {
    intent: item.intent.type,
    params: item.intent.params,
    ref: linkRef
  })) : /*#__PURE__*/_react.default.createElement("button", _extends({
    type: "button"
  }, linkProps)));
  IntentButtonOrActionButton.displayName = 'Link';
  return /*#__PURE__*/_react.default.createElement(_ui.MenuItem, {
    as: IntentButtonOrActionButton,
    "data-as": item.intent ? 'a' : 'button',
    hotkeys: hotkeys,
    icon: item.icon,
    onClick: handleClick,
    text: item.title
  });
}