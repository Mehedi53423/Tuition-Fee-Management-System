"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PaneHeaderActions = void 0;

var _uniqBy2 = _interopRequireDefault(require("lodash/uniqBy"));

var _partition2 = _interopRequireDefault(require("lodash/partition"));

var _icons = require("@sanity/icons");

var _ui = require("@sanity/ui");

var _react = _interopRequireWildcard(require("react"));

var _initialValueTemplates = require("@sanity/base/initial-value-templates");

var _IntentButton = require("../IntentButton");

var _PaneContextMenuButton = require("../pane/PaneContextMenuButton");

var _PaneHeaderCreateButton = require("./PaneHeaderCreateButton");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

// to preserve memory references
var emptyArray = [];
var emptyObject = {};

var isNonNullable = t => t !== null && t !== undefined;
/**
 * hashes an object to a string where the order of the keys don't matter
 */


var hashObject = value => {
  var sortObject = v => {
    if (typeof v !== 'object' || !v) return v;
    if (Array.isArray(v)) return v.map(sortObject);
    return Object.entries(v).sort((_ref, _ref2) => {
      var _ref3 = _slicedToArray(_ref, 1),
          keyA = _ref3[0];

      var _ref4 = _slicedToArray(_ref2, 1),
          keyB = _ref4[0];

      return keyA.localeCompare(keyB, 'en');
    });
  };

  var normalize = v => JSON.parse(JSON.stringify(v));

  return JSON.stringify(sortObject(normalize(value)));
};

var PaneHeaderActions = /*#__PURE__*/(0, _react.memo)(_ref5 => {
  var _ref5$initialValueTem = _ref5.initialValueTemplateItems,
      initialValueTemplateItemsFromStructure = _ref5$initialValueTem === void 0 ? emptyArray : _ref5$initialValueTem,
      _ref5$menuItems = _ref5.menuItems,
      menuItems = _ref5$menuItems === void 0 ? emptyArray : _ref5$menuItems,
      _ref5$menuItemGroups = _ref5.menuItemGroups,
      menuItemGroups = _ref5$menuItemGroups === void 0 ? emptyArray : _ref5$menuItemGroups,
      _ref5$actionHandlers = _ref5.actionHandlers,
      actionHandlers = _ref5$actionHandlers === void 0 ? emptyObject : _ref5$actionHandlers;
  var handleAction = (0, _react.useCallback)(item => {
    if (typeof item.action === 'string' && !(item.action in actionHandlers)) {
      console.warn('No handler for action:', item.action);
      return false;
    }

    var handler = // eslint-disable-next-line no-nested-ternary
    typeof item.action === 'function' ? item.action : typeof item.action === 'string' ? actionHandlers[item.action] : null;

    if (handler) {
      handler(item.params);
      return true;
    }

    return false;
  }, [actionHandlers]);

  var _useMemo = (0, _react.useMemo)(() => {
    var nonCreateMenuItem = menuItems // remove items with `create` intents because those will get combined
    // into one action button later
    .filter(item => {
      var _item$intent;

      return ((_item$intent = item.intent) === null || _item$intent === void 0 ? void 0 : _item$intent.type) !== 'create';
    });
    return (0, _partition2.default)(nonCreateMenuItem, item => item.showAsAction);
  }, [menuItems]),
      _useMemo2 = _slicedToArray(_useMemo, 2),
      actionMenuItems = _useMemo2[0],
      contextMenuItems = _useMemo2[1];

  var initialValueTemplateItemFromMenuItems = (0, _react.useMemo)(() => {
    return menuItems.map((item, menuItemIndex) => {
      var _item$intent2;

      if (((_item$intent2 = item.intent) === null || _item$intent2 === void 0 ? void 0 : _item$intent2.type) !== 'create') return null;
      var params = item.intent.params;
      if (!params) return null;
      var intentParams = Array.isArray(params) ? params[0] : params;
      var templateParams = Array.isArray(params) ? params[1] : undefined; // fallback to the schema type name as the template ID.
      // by default, the initial template values are populated from every
      // document type in the schema

      var templateId = intentParams.template || intentParams.type;
      if (!templateId) return null;
      var template = (0, _initialValueTemplates.getTemplateById)(templateId); // the template doesn't exist then the action might be disabled

      if (!template) return null;
      var initialDocumentId = intentParams.id;
      return {
        item,
        template,
        templateParams,
        menuItemIndex,
        initialDocumentId
      };
    }).filter(isNonNullable).map(_ref6 => {
      var initialDocumentId = _ref6.initialDocumentId,
          item = _ref6.item,
          template = _ref6.template,
          menuItemIndex = _ref6.menuItemIndex,
          templateParams = _ref6.templateParams;
      var initialValueTemplateItem = {
        id: "menuItem".concat(menuItemIndex),
        initialDocumentId,
        templateId: template.id,
        type: 'initialValueTemplateItem',
        title: item.title || template.title,
        icon: item.icon,
        description: template.description,
        parameters: templateParams
      };
      return initialValueTemplateItem;
    });
  }, [menuItems]);
  var combinedInitialValueTemplates = (0, _react.useMemo)(() => {
    // this de-dupes create actions
    return (0, _uniqBy2.default)([...initialValueTemplateItemFromMenuItems, ...initialValueTemplateItemsFromStructure], item => hashObject([item.initialDocumentId, item.templateId, item.parameters]));
  }, [initialValueTemplateItemFromMenuItems, initialValueTemplateItemsFromStructure]);
  return /*#__PURE__*/_react.default.createElement(_ui.Inline, {
    space: 1
  }, [Boolean(combinedInitialValueTemplates.length) && /*#__PURE__*/_react.default.createElement(_PaneHeaderCreateButton.PaneHeaderCreateButton, {
    key: "$CreateMenuButton",
    initialValueTemplateItems: combinedInitialValueTemplates
  }), //
  ...actionMenuItems.map((actionItem, actionIndex) => {
    return /*#__PURE__*/_react.default.createElement(_ui.Tooltip, {
      content: /*#__PURE__*/_react.default.createElement(_ui.Box, {
        padding: 2
      }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
        size: 1
      }, actionItem.title)) // eslint-disable-next-line react/no-array-index-key
      ,
      key: "".concat(actionIndex, "-").concat(actionItem.title),
      placement: "bottom"
    }, actionItem.intent ? /*#__PURE__*/_react.default.createElement(_IntentButton.IntentButton, {
      intent: actionItem.intent,
      "aria-label": actionItem.title,
      icon: actionItem.icon || _icons.UnknownIcon,
      mode: "bleed"
    }) : /*#__PURE__*/_react.default.createElement(_ui.Button, {
      "aria-label": actionItem.title,
      icon: actionItem.icon || _icons.UnknownIcon,
      mode: "bleed" // eslint-disable-next-line react/jsx-no-bind
      ,
      onClick: () => handleAction(actionItem)
    }));
  }), //
  Boolean(contextMenuItems.length) && /*#__PURE__*/_react.default.createElement(_PaneContextMenuButton.PaneContextMenuButton, {
    items: contextMenuItems,
    itemGroups: menuItemGroups,
    key: "$ContextMenu",
    onAction: handleAction
  })]);
});
exports.PaneHeaderActions = PaneHeaderActions;
PaneHeaderActions.displayName = 'PaneHeaderActions';