"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TableContainer = exports.Table = exports.ReferencesCard = exports.OtherReferenceCount = exports.InternalReferences = exports.CrossDatasetReferencesSummary = exports.CrossDatasetReferencesDetails = exports.ChevronWrapper = void 0;

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _ui = require("@sanity/ui");

var _icons = require("@sanity/icons");

var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var ChevronWrapper = (0, _styledComponents.default)(_ui.Box)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  margin-left: auto;\n"])));
exports.ChevronWrapper = ChevronWrapper;

var InternalReferences = _styledComponents.default.ul(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  height: 300px;\n  overflow: auto;\n  padding: 0;\n  margin: 0;\n  flex: initial;\n"])));

exports.InternalReferences = InternalReferences;

var CrossDatasetReferencesDetails = _styledComponents.default.details(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n  flex: none;\n\n  &[open] ", " {\n    transform: rotate(180deg);\n  }\n"])), ChevronWrapper);

exports.CrossDatasetReferencesDetails = CrossDatasetReferencesDetails;

var CrossDatasetReferencesSummary = _styledComponents.default.summary(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n  list-style: none;\n\n  &::-webkit-details-marker {\n    display: none;\n  }\n"])));

exports.CrossDatasetReferencesSummary = CrossDatasetReferencesSummary;
var TableContainer = (0, _styledComponents.default)(_ui.Box).attrs({
  paddingX: 2,
  paddingBottom: 2
})(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n  overflow: auto;\n  max-height: 150px;\n"])));
exports.TableContainer = TableContainer;

var Table = _styledComponents.default.table(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["\n  width: 100%;\n  text-align: left;\n  padding: 0 ", ";\n  border-collapse: collapse;\n\n  th {\n    padding: ", ";\n  }\n\n  thead > tr {\n    position: sticky;\n    top: 0;\n    background: var(--card-bg-color);\n    z-index: 1;\n  }\n\n  td {\n    padding: 0 ", ";\n  }\n\n  tr > *:last-child {\n    text-align: right;\n  }\n"])), _ref => {
  var theme = _ref.theme;
  return (0, _ui.rem)(theme.sanity.space[2]);
}, _ref2 => {
  var theme = _ref2.theme;
  return (0, _ui.rem)(theme.sanity.space[1]);
}, _ref3 => {
  var theme = _ref3.theme;
  return (0, _ui.rem)(theme.sanity.space[1]);
});

exports.Table = Table;
var ReferencesCard = (0, _styledComponents.default)(_ui.Card).attrs({
  radius: 2,
  shadow: 1,
  marginBottom: 4,
  flex: 'auto'
})(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["\n  overflow: hidden;\n  min-height: 150px;\n"])));
exports.ReferencesCard = ReferencesCard;

var OtherReferenceCount = props => {
  var difference = props.totalCount - props.references.length;
  if (!difference) return null;
  return /*#__PURE__*/_react.default.createElement(_ui.Inline, {
    space: 2
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    size: 1,
    muted: true
  }, difference, " other reference", difference === 1 ? '' : 's', " not shown."), /*#__PURE__*/_react.default.createElement(_ui.Tooltip, {
    portal: true,
    content: /*#__PURE__*/_react.default.createElement(_ui.Box, {
      padding: 2
    }, /*#__PURE__*/_react.default.createElement(_ui.Text, null, "We can't show metadata about these references because no token with access to the datasets they are in was found. Read more about how to configure tokens in the", ' ', /*#__PURE__*/_react.default.createElement("a", {
      href: "https://www.sanity.io/docs/cross-dataset-references"
    }, "Cross dataset references documentation")))
  }, /*#__PURE__*/_react.default.createElement(_icons.InfoOutlineIcon, null)));
};

exports.OtherReferenceCount = OtherReferenceCount;