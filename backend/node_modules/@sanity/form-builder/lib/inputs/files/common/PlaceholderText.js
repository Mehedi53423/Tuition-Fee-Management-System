"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PlaceholderText = PlaceholderText;

var _react = _interopRequireWildcard(require("react"));

var _icons = require("@sanity/icons");

var _ui = require("@sanity/ui");

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _templateObject;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var RootFlex = (0, _styledComponents.default)(_ui.Flex)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  pointer-events: none;\n"])));

function PlaceholderText(props) {
  var hoveringFiles = props.hoveringFiles,
      type = props.type,
      readOnly = props.readOnly,
      acceptedFiles = props.acceptedFiles,
      rejectedFilesCount = props.rejectedFilesCount,
      directUploads = props.directUploads;
  var isFileType = type === 'file';
  var messageIcon = (0, _react.useMemo)(() => {
    if (readOnly) {
      return /*#__PURE__*/_react.default.createElement(_icons.ReadOnlyIcon, null);
    }

    if (hoveringFiles && rejectedFilesCount > 0 || !directUploads) {
      return /*#__PURE__*/_react.default.createElement(_icons.AccessDeniedIcon, null);
    }

    return isFileType ? /*#__PURE__*/_react.default.createElement(_icons.BinaryDocumentIcon, null) : /*#__PURE__*/_react.default.createElement(_icons.ImageIcon, null);
  }, [directUploads, hoveringFiles, isFileType, readOnly, rejectedFilesCount]);
  var messageText = (0, _react.useMemo)(() => {
    var message = "Drag or paste ".concat(type, " here");

    if (!directUploads) {
      return "Can't upload files here";
    }

    if (readOnly) {
      message = 'Read only';
    }

    if (hoveringFiles && directUploads && !readOnly) {
      if (acceptedFiles.length > 0) {
        message = "Drop to upload ".concat(type);
      }

      if (rejectedFilesCount > 0) {
        message = "Can't upload ".concat(rejectedFilesCount, " file").concat(rejectedFilesCount > 1 ? 's' : '', " here");
      }
    }

    return message;
  }, [acceptedFiles.length, directUploads, hoveringFiles, readOnly, rejectedFilesCount, type]);
  return /*#__PURE__*/_react.default.createElement(RootFlex, {
    align: "center",
    gap: 2,
    justify: "center"
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    muted: true
  }, messageIcon), /*#__PURE__*/_react.default.createElement(_ui.Text, {
    size: 1,
    muted: true
  }, messageText));
}