"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ReferenceAutocomplete = void 0;

var _react = _interopRequireWildcard(require("react"));

var _ui = require("@sanity/ui");

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _templateObject, _templateObject2;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var StyledPopover = (0, _styledComponents.default)(_ui.Popover)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  & > div {\n    overflow: auto;\n    -webkit-overflow-scrolling: touch;\n  }\n"])));
var StyledText = (0, _styledComponents.default)(_ui.Text)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  word-break: break-word;\n"])));
var ReferenceAutocomplete = /*#__PURE__*/(0, _react.forwardRef)(function ReferenceAutocomplete(props, ref) {
  var hasResults = props.options.length > 0;
  var renderPopover = (0, _react.useCallback)((_ref, contentRef) => {
    var content = _ref.content,
        hidden = _ref.hidden,
        inputElement = _ref.inputElement,
        onMouseEnter = _ref.onMouseEnter,
        onMouseLeave = _ref.onMouseLeave;
    return /*#__PURE__*/_react.default.createElement(StyledPopover, {
      "data-testid": "autocomplete-popover",
      placement: "bottom-start",
      arrow: false,
      constrainSize: true,
      onMouseEnter: onMouseEnter,
      onMouseLeave: onMouseLeave,
      content: /*#__PURE__*/_react.default.createElement("div", {
        ref: contentRef
      }, hasResults ? content : /*#__PURE__*/_react.default.createElement(_ui.Box, {
        padding: 4
      }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
        align: "center",
        height: "fill",
        justify: "center"
      }, /*#__PURE__*/_react.default.createElement(StyledText, {
        align: "center",
        muted: true
      }, "No results for ", /*#__PURE__*/_react.default.createElement("strong", null, "\u201C", props.searchString, "\u201D"))))),
      open: !props.loading && !hidden,
      ref: props.portalRef,
      portal: true,
      referenceElement: props.referenceElement || inputElement,
      matchReferenceWidth: true
    });
  }, [hasResults, props.searchString, props.loading, props.portalRef, props.referenceElement]);
  return /*#__PURE__*/_react.default.createElement(_ui.Autocomplete, _extends({}, props, {
    ref: ref,
    renderPopover: renderPopover
  }));
});
exports.ReferenceAutocomplete = ReferenceAutocomplete;