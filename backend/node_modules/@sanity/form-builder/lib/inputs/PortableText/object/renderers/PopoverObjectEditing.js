"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PopoverObjectEditing = PopoverObjectEditing;

var _presence = require("@sanity/base/presence");

var _icons = require("@sanity/icons");

var _ui = require("@sanity/ui");

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _FormBuilderInput = require("../../../../FormBuilderInput");

var _constants = require("./constants");

var _debug = require("./debug");

var _templateObject, _templateObject2, _templateObject3, _templateObject4;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var RootPopover = (0, _styledComponents.default)(_ui.Popover)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  &[data-popper-reference-hidden='true'] {\n    visibility: hidden;\n    pointer-events: none;\n  }\n\n  & > div {\n    overflow: hidden;\n  }\n"])));
var ContentContainer = (0, _styledComponents.default)(_ui.Container)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  &:not([hidden]) {\n    display: flex;\n  }\n  direction: column;\n"])));
var ContentScrollerBox = (0, _styledComponents.default)(_ui.Box)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n  /* Prevent overflow caused by change indicator */\n  overflow-x: hidden;\n  overflow-y: auto;\n"])));
var ContentHeaderBox = (0, _styledComponents.default)(_ui.Box)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n  background-color: var(--card-bg-color);\n  box-shadow: 0 1px 0 var(--card-shadow-outline-color);\n  position: relative;\n  z-index: 10;\n  min-height: auto;\n"])));
var POPOVER_FALLBACK_PLACEMENTS = ['top', 'bottom'];

function PopoverObjectEditing(props) {
  var width = props.width,
      elementRef = props.elementRef,
      scrollElement = props.scrollElement;

  var _useState = (0, _react.useState)(0),
      _useState2 = _slicedToArray(_useState, 2),
      forceUpdate = _useState2[0],
      setForceUpdate = _useState2[1];

  var virtualElement = (0, _react.useMemo)(() => {
    if (!(elementRef !== null && elementRef !== void 0 && elementRef.current.getBoundingClientRect())) {
      return null;
    }

    return {
      contextElement: elementRef.current || undefined,
      getBoundingClientRect: () => {
        return (elementRef === null || elementRef === void 0 ? void 0 : elementRef.current.getBoundingClientRect()) || null;
      }
    }; // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [elementRef, forceUpdate]);

  var _useState3 = (0, _react.useState)(null),
      _useState4 = _slicedToArray(_useState3, 2),
      rootElement = _useState4[0],
      setRootElement = _useState4[1];

  var boundaryElement = (0, _ui.useBoundaryElement)();
  var boundaryElementRect = (0, _ui.useElementRect)(boundaryElement.element);
  var contentStyle = (0, _react.useMemo)(() => ({
    opacity: boundaryElementRect ? undefined : 0,
    width: boundaryElementRect ? "".concat(boundaryElementRect.width - 16, "px") : undefined
  }), [boundaryElementRect]);
  var handleScrollOrResize = (0, _react.useCallback)(() => {
    setForceUpdate(forceUpdate + 1);
  }, [forceUpdate]);
  (0, _react.useEffect)(() => {
    if (scrollElement) {
      scrollElement.addEventListener('scroll', handleScrollOrResize, true);
    }

    return () => {
      if (scrollElement) {
        scrollElement.removeEventListener('scroll', handleScrollOrResize, true);
      }
    };
  }, [handleScrollOrResize, scrollElement]);
  return /*#__PURE__*/_react.default.createElement(RootPopover, {
    constrainSize: true,
    content: /*#__PURE__*/_react.default.createElement(Content, _extends({}, props, {
      rootElement: rootElement,
      style: contentStyle,
      width: width
    })),
    fallbackPlacements: POPOVER_FALLBACK_PLACEMENTS,
    placement: "bottom",
    open: true,
    portal: "default",
    ref: setRootElement,
    referenceElement: virtualElement || _debug.debugElement
  });
}

function Content(props) {
  var focusPath = props.focusPath,
      markers = props.markers,
      object = props.object,
      onBlur = props.onBlur,
      onChange = props.onChange,
      onClose = props.onClose,
      onFocus = props.onFocus,
      path = props.path,
      presence = props.presence,
      readOnly = props.readOnly,
      rootElement = props.rootElement,
      style = props.style,
      type = props.type,
      _props$width = props.width,
      width = _props$width === void 0 ? 'small' : _props$width;

  var _useLayer = (0, _ui.useLayer)(),
      isTopLayer = _useLayer.isTopLayer;

  var _useBoundaryElement = (0, _ui.useBoundaryElement)(),
      boundaryElement = _useBoundaryElement.element;

  var portal = (0, _ui.usePortal)();
  var handleChange = (0, _react.useCallback)(patchEvent => onChange(patchEvent, path), [onChange, path]);
  var handleClose = (0, _react.useCallback)(() => {
    if (isTopLayer) onClose();
  }, [isTopLayer, onClose]);
  var handleKeyDown = (0, _react.useCallback)(event => {
    if (event.key === 'Escape') handleClose();
  }, [handleClose]);
  (0, _ui.useClickOutside)(handleClose, [rootElement], boundaryElement);
  (0, _react.useEffect)(() => {
    window.addEventListener('keydown', handleKeyDown);
    return () => {
      window.removeEventListener('keydown', handleKeyDown);
    };
  }, [handleKeyDown]);
  return /*#__PURE__*/_react.default.createElement(ContentContainer, {
    style: style,
    width: _constants.POPOVER_WIDTH_TO_UI_WIDTH[width]
  }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    direction: "column",
    flex: 1
  }, /*#__PURE__*/_react.default.createElement(ContentHeaderBox, {
    padding: 1
  }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    align: "center"
  }, /*#__PURE__*/_react.default.createElement(_ui.Box, {
    flex: 1,
    padding: 2
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    weight: "semibold"
  }, type.title)), /*#__PURE__*/_react.default.createElement(_ui.Button, {
    icon: _icons.CloseIcon,
    mode: "bleed",
    onClick: handleClose,
    padding: 2
  }))), /*#__PURE__*/_react.default.createElement(ContentScrollerBox, {
    flex: 1
  }, /*#__PURE__*/_react.default.createElement(_presence.PresenceOverlay, {
    margins: [0, 0, 1, 0]
  }, /*#__PURE__*/_react.default.createElement(_ui.Box, {
    padding: 3
  }, /*#__PURE__*/_react.default.createElement(_ui.PortalProvider, {
    element: portal.elements.default
  }, /*#__PURE__*/_react.default.createElement(_FormBuilderInput.FormBuilderInput, {
    focusPath: focusPath,
    level: 0,
    markers: markers,
    onBlur: onBlur,
    onChange: handleChange,
    onFocus: onFocus,
    path: path,
    presence: presence,
    readOnly: readOnly || type.readOnly,
    type: type,
    value: object
  })))))));
}