"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.inputResolver = void 0;

var _ui = require("@sanity/ui");

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _PortableTextInput = require("../../PortableTextInput");

var _inputResolver = _interopRequireDefault(require("../../../../sanity/inputResolver/inputResolver"));

var _templateObject;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var DebugTextArea = (0, _styledComponents.default)(_ui.TextArea)(_ref => {
  var theme = _ref.theme;
  return (0, _styledComponents.css)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n    font-family: ", ";\n  "])), theme.sanity.fonts.code.family);
});
var DebugInput = /*#__PURE__*/(0, _react.forwardRef)(function DebugInput(props, ref) {
  var rootRef = (0, _react.useRef)(null);
  (0, _react.useImperativeHandle)(ref, () => ({
    blur: () => {
      var _rootRef$current;

      return (_rootRef$current = rootRef.current) === null || _rootRef$current === void 0 ? void 0 : _rootRef$current.blur();
    },
    focus: () => {
      var _rootRef$current2;

      return (_rootRef$current2 = rootRef.current) === null || _rootRef$current2 === void 0 ? void 0 : _rootRef$current2.focus();
    }
  }));
  return /*#__PURE__*/_react.default.createElement(DebugTextArea, {
    padding: 3,
    radius: 1,
    readOnly: true,
    ref: rootRef,
    rows: 10,
    value: JSON.stringify(props.value, null, 2)
  });
});

var inputResolver = input => {
  if (input.type.name === 'block') {
    return _PortableTextInput.PortableTextInput;
  }

  if (input.type.name === 'document') {
    input.type.name = 'object';
  }

  var resolved = (0, _inputResolver.default)(input.type);

  if (resolved) {
    return resolved;
  }

  return DebugInput;
};

exports.inputResolver = inputResolver;