"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RowItem = void 0;

var _presence = require("@sanity/base/presence");

var _react = _interopRequireWildcard(require("react"));

var _ui = require("@sanity/ui");

var _icons = require("@sanity/icons");

var _components = require("@sanity/base/components");

var _autoId = require("@reach/auto-id");

var _Preview = _interopRequireDefault(require("../../../../Preview"));

var _DragHandle = require("../../common/DragHandle");

var _randomKey = _interopRequireDefault(require("../../common/randomKey"));

var _ArrayInput = require("../ArrayInput");

var _InsertMenu = require("../InsertMenu");

var _ItemWithMissingType = require("./ItemWithMissingType");

var _RowWrapper = require("./components/RowWrapper");

var _excluded = ["isSortable", "value", "onClick", "onKeyPress", "onFocus", "type", "readOnly", "presence", "onInsert", "insertableTypes", "onRemove", "validation"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var dragHandle = /*#__PURE__*/_react.default.createElement(_DragHandle.DragHandle, {
  paddingX: 1,
  paddingY: 3
});

var MENU_POPOVER_PROPS = {
  portal: true,
  tone: 'default'
};

var RowItem = /*#__PURE__*/_react.default.forwardRef(function RegularItem(props, ref) {
  var _type$options;

  var focusRef = _react.default.useRef(null);

  var isSortable = props.isSortable,
      value = props.value,
      onClick = props.onClick,
      onKeyPress = props.onKeyPress,
      onFocus = props.onFocus,
      type = props.type,
      readOnly = props.readOnly,
      presence = props.presence,
      onInsert = props.onInsert,
      insertableTypes = props.insertableTypes,
      onRemove = props.onRemove,
      validation = props.validation,
      rest = _objectWithoutProperties(props, _excluded);

  var hasErrors = validation.some(v => v.level === 'error');
  var hasWarnings = validation.some(v => v.level === 'warning');
  var handleDuplicate = (0, _react.useCallback)(() => {
    onInsert === null || onInsert === void 0 ? void 0 : onInsert({
      item: _objectSpread(_objectSpread({}, value), {}, {
        _key: (0, _randomKey.default)()
      }),
      position: 'after',
      path: [{
        _key: value._key
      }],
      edit: false
    });
  }, [onInsert, value]);
  var handleInsert = (0, _react.useCallback)((pos, insertType) => {
    onInsert === null || onInsert === void 0 ? void 0 : onInsert({
      item: _objectSpread(_objectSpread({}, (0, _ArrayInput.createProtoValue)(insertType)), {}, {
        _key: (0, _randomKey.default)()
      }),
      position: pos,
      path: [{
        _key: value._key
      }]
    });
  }, [onInsert, value._key]);
  var id = (0, _autoId.useId)();
  return /*#__PURE__*/_react.default.createElement(_RowWrapper.RowWrapper, _extends({}, rest, {
    ref: ref,
    radius: 2,
    padding: 1,
    tone: readOnly ? 'transparent' : hasErrors ? 'critical' : hasWarnings ? 'caution' : 'default'
  }), /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    align: "center"
  }, isSortable && /*#__PURE__*/_react.default.createElement(_ui.Card, {
    className: "dragHandle",
    tone: "inherit",
    marginRight: 1
  }, dragHandle), type ? /*#__PURE__*/_react.default.createElement(_ui.Card, {
    as: "button",
    type: "button",
    tone: "inherit",
    radius: 2,
    padding: 1,
    flex: 1,
    onClick: onClick,
    ref: focusRef,
    onKeyPress: onKeyPress,
    onFocus: onFocus,
    __unstable_focusRing: true
  }, /*#__PURE__*/_react.default.createElement(_Preview.default, {
    layout: ((_type$options = type.options) === null || _type$options === void 0 ? void 0 : _type$options.layout) === 'grid' ? 'media' : 'default',
    value: value,
    type: type
  })) : /*#__PURE__*/_react.default.createElement(_ui.Box, {
    flex: 1
  }, /*#__PURE__*/_react.default.createElement(_ItemWithMissingType.ItemWithMissingType, {
    value: value,
    onFocus: onFocus
  })), /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    align: "center"
  }, !readOnly && presence.length > 0 && /*#__PURE__*/_react.default.createElement(_ui.Box, {
    marginLeft: 1
  }, /*#__PURE__*/_react.default.createElement(_presence.FieldPresence, {
    presence: presence,
    maxAvatars: 1
  })), validation.length > 0 && /*#__PURE__*/_react.default.createElement(_ui.Box, {
    marginLeft: 1,
    paddingX: 1,
    paddingY: 3
  }, /*#__PURE__*/_react.default.createElement(_components.FormFieldValidationStatus, {
    __unstable_markers: validation,
    __unstable_showSummary: !value._ref
  })), !readOnly && /*#__PURE__*/_react.default.createElement(_ui.MenuButton, {
    button: /*#__PURE__*/_react.default.createElement(_ui.Button, {
      padding: 2,
      mode: "bleed",
      icon: _icons.EllipsisVerticalIcon
    }),
    id: "".concat(id, "-menuButton"),
    menu: /*#__PURE__*/_react.default.createElement(_ui.Menu, null, /*#__PURE__*/_react.default.createElement(_ui.MenuItem, {
      text: "Remove",
      tone: "critical",
      icon: _icons.TrashIcon,
      onClick: onRemove
    }), /*#__PURE__*/_react.default.createElement(_ui.MenuItem, {
      text: "Duplicate",
      icon: _icons.CopyIcon,
      onClick: handleDuplicate
    }), /*#__PURE__*/_react.default.createElement(_InsertMenu.InsertMenu, {
      types: insertableTypes,
      onInsert: handleInsert
    })),
    placement: "right",
    popover: MENU_POPOVER_PROPS
  }), !value._key && /*#__PURE__*/_react.default.createElement(_ui.Box, {
    marginLeft: 1
  }, /*#__PURE__*/_react.default.createElement(_ui.Tooltip, {
    content: /*#__PURE__*/_react.default.createElement(_ui.Box, {
      padding: 2
    }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
      muted: true,
      size: 1
    }, "This item is missing the required ", /*#__PURE__*/_react.default.createElement("code", null, "_key"), " property.")),
    placement: "top"
  }, /*#__PURE__*/_react.default.createElement(_ui.Badge, {
    mode: "outline",
    tone: "caution"
  }, "Missing key"))))));
});

exports.RowItem = RowItem;