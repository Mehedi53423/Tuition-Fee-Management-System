"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InsertMenu = void 0;

var _react = _interopRequireWildcard(require("react"));

var _ui = require("@sanity/ui");

var _icons = require("@sanity/icons");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/* eslint-disable react/jsx-no-bind */
var MENU_POPOVER_PROPS = {
  portal: true,
  tone: 'default',
  placement: 'left',
  constrainSize: true
};
var InsertMenu = /*#__PURE__*/(0, _react.memo)(function InsertMenu(props) {
  var types = props.types,
      onInsert = props.onInsert;
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(InsertMenuGroup, {
    pos: "before",
    types: types,
    onInsert: onInsert,
    text: "Add item before",
    icon: _icons.InsertAboveIcon
  }), /*#__PURE__*/_react.default.createElement(InsertMenuGroup, {
    pos: "after",
    types: types,
    onInsert: onInsert,
    text: "Add item after",
    icon: _icons.InsertBelowIcon
  }));
});
exports.InsertMenu = InsertMenu;

function InsertMenuGroup(props) {
  var types = props.types,
      onInsert = props.onInsert,
      pos = props.pos,
      text = props.text,
      icon = props.icon;

  if (types.length === 1) {
    return /*#__PURE__*/_react.default.createElement(_ui.MenuItem, {
      key: pos,
      text: text,
      icon: icon,
      onClick: () => onInsert(pos, types[0])
    });
  }

  return /*#__PURE__*/_react.default.createElement(_ui.MenuGroup, {
    text: text,
    key: pos,
    popover: MENU_POPOVER_PROPS
  }, types.map(insertableType => /*#__PURE__*/_react.default.createElement(_ui.MenuItem, {
    key: insertableType.name,
    icon: insertableType.icon,
    text: insertableType.title,
    onClick: () => onInsert(pos, insertableType)
  })));
}