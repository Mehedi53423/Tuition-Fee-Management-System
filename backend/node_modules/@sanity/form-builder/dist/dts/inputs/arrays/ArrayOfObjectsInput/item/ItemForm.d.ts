import { Marker, Path, SchemaType } from '@sanity/types';
import React from 'react';
import { FormFieldPresence } from '@sanity/base/presence';
import { ArrayMember, InsertEvent, ReferenceItemComponentType } from '../types';
import PatchEvent from '../../../../PatchEvent';
declare type Props = {
    type: SchemaType;
    value: ArrayMember;
    compareValue?: ArrayMember[];
    onInsert?: (event: InsertEvent) => void;
    markers: Marker[];
    onChange: (event: PatchEvent) => void;
    onFocus: (path: Path) => void;
    insertableTypes?: SchemaType[];
    ReferenceItemComponent: ReferenceItemComponentType;
    onBlur: () => void;
    filterField: () => any;
    isSortable: boolean;
    readOnly: boolean | null;
    focusPath: Path;
    presence: FormFieldPresence[];
};
export declare const ItemForm: React.ForwardRefExoticComponent<Props & React.RefAttributes<any>>;
export {};
//# sourceMappingURL=ItemForm.d.ts.map