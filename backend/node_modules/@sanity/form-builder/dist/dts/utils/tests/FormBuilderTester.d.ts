/// <reference types="jest" />
import { FormFieldPresence } from '@sanity/base/presence';
import { Marker, Path, Schema, SchemaType } from '@sanity/types';
import React from 'react';
declare type PatchChannel = {
    subscribe: () => () => {};
    receivePatches: (patches: any[]) => void;
};
declare type FormBuilderProps = {
    value: any | null;
    schema: Schema;
    type: SchemaType;
    markers: Marker[];
    patchChannel: PatchChannel;
    compareValue: any;
    onFocus: (path: Path) => void;
    readOnly: boolean;
    onChange: (patches: any[]) => void;
    filterField: (field: any) => boolean;
    onBlur: () => void;
    autoFocus: boolean;
    focusPath: Path;
    presence: FormFieldPresence[];
    changesOpen: boolean;
};
export declare const DEFAULT_PROPS: {
    level: number;
    markers: any[];
    presence: any[];
    compareValue: any;
    readOnly: any;
    filterField: () => boolean;
    patchChannel: any;
    onBlur: () => any;
    autoFocus: any;
    focusPath: any[];
    changesOpen: boolean;
};
export declare function inputTester(document: any, type: any, schema: any, testId?: string): {
    onChange: jest.Mock<any, any>;
    onFocus: jest.Mock<any, any>;
    onBlur: jest.Mock<any, any>;
    inputContainer: HTMLElement;
};
export declare const FormBuilderTester: React.ForwardRefExoticComponent<FormBuilderProps & React.RefAttributes<unknown>>;
export {};
//# sourceMappingURL=FormBuilderTester.d.ts.map