import { Schema, SchemaType } from '@sanity/types';
import React from 'react';
import type { UploadOptions } from '../../sanity/uploads/types';
export declare const DEFAULT_PROPS: {
    value: {};
    compareValue: {};
    type: {
        description: string;
        fields: {
            name: string;
            type: {
                fields: any[];
                jsonType: string;
                name: string;
                title: string;
                to: any[];
                type: {
                    name: string;
                    type: any;
                    jsonType: string;
                    validation: any[];
                };
                validation: any[];
            };
        }[];
        isCustomized: boolean;
        jsonType: string;
        name: string;
        options: {};
        preview: {};
        title: string;
        type: {
            jsonType: string;
            name: string;
            type: any;
        };
    };
    level: number;
    onChange: () => any;
    resolveUploader: () => {
        priority: number;
        type: string;
        accepts: string;
        upload: (file: File, type?: SchemaType, options?: UploadOptions) => import("rxjs").Observable<never>;
    };
    observeAsset: (id: string) => import("rxjs").Observable<{
        originalFilename: string;
        url: string;
        size: number;
        _id: string;
        _rev: string;
        _type: string;
    }>;
    onBlur: () => any;
    onFocus: () => any;
    readOnly: boolean;
    focusPath: any[];
    directUploads: boolean;
    assetSources: {}[];
    markers: any[];
    presence: any[];
    imageUrlBuilder: import("@sanity/image-url/lib/types/builder").ImageUrlBuilder;
    getValuePath: () => string[];
};
export declare const FileInputTester: React.ForwardRefExoticComponent<import("../../inputs/files/FileInput").Props & {
    schema: Schema;
} & React.RefAttributes<unknown>>;
//# sourceMappingURL=FileInputTester.d.ts.map